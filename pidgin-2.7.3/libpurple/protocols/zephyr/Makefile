# Makefile.in generated by automake 1.9.6 from Makefile.am.
# libpurple/protocols/zephyr/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ../../..

pkgdatadir = $(datadir)/pidgin
pkglibdir = $(libdir)/pidgin
pkgincludedir = $(includedir)/pidgin
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin10.4.0
host_triplet = i386-apple-darwin10.4.0
subdir = libpurple/protocols/zephyr
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(pkgdir)"
pkgLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(noinst_LTLIBRARIES) $(pkg_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
libzephyr_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
#libzephyr_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_2)
#libzephyr_la_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__libzephyr_la_SOURCES_DIST = ZAsyncLocate.c ZCkAuth.c ZCkIfNot.c \
	ZClosePort.c ZCmpUID.c ZCmpUIDP.c ZFlsLocs.c ZFlsSubs.c \
	ZFmtAuth.c ZFmtList.c ZFmtNotice.c ZFmtRaw.c ZFmtRawLst.c \
	ZFmtSmRLst.c ZFmtSmRaw.c ZFreeNot.c ZGetLocs.c ZGetSender.c \
	ZGetSubs.c ZGetWGPort.c ZIfNotice.c ZInit.c ZLocations.c \
	ZMakeAscii.c ZMkAuth.c ZNewLocU.c ZOpenPort.c ZParseNot.c \
	ZPeekIfNot.c ZPeekNot.c ZPeekPkt.c ZPending.c ZReadAscii.c \
	ZRecvNot.c ZRecvPkt.c ZRetSubs.c ZSendList.c ZSendNot.c \
	ZSendPkt.c ZSendRLst.c ZSendRaw.c ZSetDest.c ZSetFD.c \
	ZSetSrv.c ZSubs.c ZVariables.c ZWait4Not.c ZhmStat.c \
	Zinternal.c com_err.h error_message.c error_table.h et_name.c \
	init_et.c internal.h mit-copyright.h mit-sipb-copyright.h \
	sysdep.h zephyr_err.c zephyr_err.h zephyr_internal.h zephyr.c
am__objects_1 = libzephyr_la-ZAsyncLocate.lo libzephyr_la-ZCkAuth.lo \
	libzephyr_la-ZCkIfNot.lo libzephyr_la-ZClosePort.lo \
	libzephyr_la-ZCmpUID.lo libzephyr_la-ZCmpUIDP.lo \
	libzephyr_la-ZFlsLocs.lo libzephyr_la-ZFlsSubs.lo \
	libzephyr_la-ZFmtAuth.lo libzephyr_la-ZFmtList.lo \
	libzephyr_la-ZFmtNotice.lo libzephyr_la-ZFmtRaw.lo \
	libzephyr_la-ZFmtRawLst.lo libzephyr_la-ZFmtSmRLst.lo \
	libzephyr_la-ZFmtSmRaw.lo libzephyr_la-ZFreeNot.lo \
	libzephyr_la-ZGetLocs.lo libzephyr_la-ZGetSender.lo \
	libzephyr_la-ZGetSubs.lo libzephyr_la-ZGetWGPort.lo \
	libzephyr_la-ZIfNotice.lo libzephyr_la-ZInit.lo \
	libzephyr_la-ZLocations.lo libzephyr_la-ZMakeAscii.lo \
	libzephyr_la-ZMkAuth.lo libzephyr_la-ZNewLocU.lo \
	libzephyr_la-ZOpenPort.lo libzephyr_la-ZParseNot.lo \
	libzephyr_la-ZPeekIfNot.lo libzephyr_la-ZPeekNot.lo \
	libzephyr_la-ZPeekPkt.lo libzephyr_la-ZPending.lo \
	libzephyr_la-ZReadAscii.lo libzephyr_la-ZRecvNot.lo \
	libzephyr_la-ZRecvPkt.lo libzephyr_la-ZRetSubs.lo \
	libzephyr_la-ZSendList.lo libzephyr_la-ZSendNot.lo \
	libzephyr_la-ZSendPkt.lo libzephyr_la-ZSendRLst.lo \
	libzephyr_la-ZSendRaw.lo libzephyr_la-ZSetDest.lo \
	libzephyr_la-ZSetFD.lo libzephyr_la-ZSetSrv.lo \
	libzephyr_la-ZSubs.lo libzephyr_la-ZVariables.lo \
	libzephyr_la-ZWait4Not.lo libzephyr_la-ZhmStat.lo \
	libzephyr_la-Zinternal.lo libzephyr_la-error_message.lo \
	libzephyr_la-et_name.lo libzephyr_la-init_et.lo \
	libzephyr_la-zephyr_err.lo libzephyr_la-zephyr.lo
am__objects_2 = libzephyr_la-zephyr.lo
am_libzephyr_la_OBJECTS = $(am__objects_1)
#am_libzephyr_la_OBJECTS = $(am__objects_2)
#am_libzephyr_la_OBJECTS = $(am__objects_1)
libzephyr_la_OBJECTS = $(am_libzephyr_la_OBJECTS)
am_libzephyr_la_rpath = -rpath $(pkgdir)
#am_libzephyr_la_rpath =
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libzephyr_la_SOURCES)
DIST_SOURCES = $(am__libzephyr_la_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/deanchen/chimein/pidgin-2.7.3/missing --run aclocal-1.9
ALLOCA = 
ALL_LINGUAS = af am ar az be@latin bg bn bn_IN bs ca ca@valencia cs da de dz el en_AU en_CA en_GB eo es et eu fa fi fr ga gl gu he hi hu hy id it ja ka km kn ko ku lo lt mk mn mr ms_MY my_MM nb ne nl nn oc or pa pl pt_BR pt ps ro ru si sk sl sq sr sr@latin sv sw ta te th tr uk ur vi xh zh_CN zh_HK zh_TW
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /Users/deanchen/chimein/pidgin-2.7.3/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /Users/deanchen/chimein/pidgin-2.7.3/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/deanchen/chimein/pidgin-2.7.3/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/deanchen/chimein/pidgin-2.7.3/missing --run automake-1.9
AVAHI_CFLAGS = -I/sw/include -I/sw/include/glib-2.0 -I/sw/lib/glib-2.0/include -D_REENTRANT
AVAHI_LIBS = -L/sw/lib -lavahi-common -lavahi-client -lavahi-glib -lglib-2.0 -lintl
AWK = gawk
BUILD_GEVOLUTION_FALSE = 
BUILD_GEVOLUTION_TRUE = #
CATALOGS =  af.gmo am.gmo ar.gmo az.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo bs.gmo ca.gmo ca@valencia.gmo cs.gmo da.gmo de.gmo dz.gmo el.gmo en_AU.gmo en_CA.gmo en_GB.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hu.gmo hy.gmo id.gmo it.gmo ja.gmo ka.gmo km.gmo kn.gmo ko.gmo ku.gmo lo.gmo lt.gmo mk.gmo mn.gmo mr.gmo ms_MY.gmo my_MM.gmo nb.gmo ne.gmo nl.gmo nn.gmo oc.gmo or.gmo pa.gmo pl.gmo pt_BR.gmo pt.gmo ps.gmo ro.gmo ru.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@latin.gmo sv.gmo sw.gmo ta.gmo te.gmo th.gmo tr.gmo uk.gmo ur.gmo vi.gmo xh.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -g -O2
CHECK_CFLAGS = 
CHECK_LIBS = 
CPP = gcc -E
CPPFLAGS =  -I/sw/include
CYGPATH_W = echo
DATADIRNAME = share
DBUS_CFLAGS = 
DBUS_LIBS = 
DBUS_SERVICES_DIR = 
DEBUG_CFLAGS = -Wall  -DPURPLE_DISABLE_DEPRECATED -DPIDGIN_DISABLE_DEPRECATED -DFINCH_DISABLE_DEPRECATED -DGNT_DISABLE_DEPRECATED
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTRIB_FALSE = 
DISTRIB_TRUE = #
DOT = 
DOXYGEN = false
DSYMUTIL = dsymutil
DUMPBIN = 
DYNALOADER_A = 
DYNAMIC_PRPLS = bonjour gg irc jabber msn myspace mxit novell oscar qq silc simple yahoo zephyr
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
ENABLE_CAP_FALSE = 
ENABLE_CAP_TRUE = #
ENABLE_DBUS_FALSE = 
ENABLE_DBUS_TRUE = #
ENABLE_GESTURES_FALSE = 
ENABLE_GESTURES_TRUE = #
ENABLE_GNT_FALSE = 
ENABLE_GNT_TRUE = #
ENABLE_GTK_FALSE = 
ENABLE_GTK_TRUE = #
ENABLE_TRAYCOMPAT_FALSE = 
ENABLE_TRAYCOMPAT_TRUE = #
EVOLUTION_ADDRESSBOOK_CFLAGS = 
EVOLUTION_ADDRESSBOOK_LIBS = 
EXEEXT = 
EXTERNAL_LIBZEPHYR_FALSE = 
EXTERNAL_LIBZEPHYR_TRUE = #
FARSIGHT_CFLAGS = -I/sw/include/gstreamer-0.10 -I/sw/include/glib-2.0 -I/sw/lib/glib-2.0/include -I/sw/include/libxml2 -I/sw/include
FARSIGHT_LIBS = -L/sw/lib -lgstfarsight-0.10 -lgstbase-0.10 -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lxml2 -lglib-2.0 -lintl
FGREP = /usr/bin/grep -F
GADU_CFLAGS = 
GADU_LIBS = 
GCONFTOOL = /sw/bin/gconftool-2
GCONF_SCHEMAS_INSTALL_FALSE = 
GCONF_SCHEMAS_INSTALL_TRUE = #
GCONF_SCHEMA_CONFIG_SOURCE = xml:merged:/sw/etc/gconf/gconf.xml.defaults
GCONF_SCHEMA_FILE_DIR = $(sysconfdir)/gconf/schemas
GETTEXT_PACKAGE = pidgin
GLIB_CFLAGS = -I/sw/include/glib-2.0 -I/sw/lib/glib-2.0/include
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -L/sw/lib -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lglib-2.0 -lintl
GMOFILES =  af.gmo am.gmo ar.gmo az.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo bs.gmo ca.gmo ca@valencia.gmo cs.gmo da.gmo de.gmo dz.gmo el.gmo en_AU.gmo en_CA.gmo en_GB.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hu.gmo hy.gmo id.gmo it.gmo ja.gmo ka.gmo km.gmo kn.gmo ko.gmo ku.gmo lo.gmo lt.gmo mk.gmo mn.gmo mr.gmo ms_MY.gmo my_MM.gmo nb.gmo ne.gmo nl.gmo nn.gmo oc.gmo or.gmo pa.gmo pl.gmo pt_BR.gmo pt.gmo ps.gmo ro.gmo ru.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@latin.gmo sv.gmo sw.gmo ta.gmo te.gmo th.gmo tr.gmo uk.gmo ur.gmo vi.gmo xh.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
GMSGFMT = /sw/bin/msgfmt
GNT_CFLAGS = 
GNT_LIBS = 
GNT_LT_VERSION_INFO = 8:0:8
GNT_MAJOR_VERSION = 2
GNT_MICRO_VERSION = 0
GNT_MINOR_VERSION = 8
GNT_VERSION = gnt_display_version
GNUTLS_CFLAGS = -I/opt/local/include/
GNUTLS_LIBS = -L/opt/local/lib/ -lgnutls -lgcrypt
GREP = /usr/bin/grep
GSTINTERFACES_CFLAGS = 
GSTINTERFACES_LIBS = 
GSTREAMER_CFLAGS = 
GSTREAMER_LIBS = 
GTKSPELL_CFLAGS = 
GTKSPELL_LIBS = 
GTK_CFLAGS = 
GTK_LIBS = 
HAVE_CHECK_FALSE = 
HAVE_CHECK_TRUE = #
HAVE_DOXYGEN_FALSE = 
HAVE_DOXYGEN_TRUE = #
HAVE_XSLTPROC_FALSE = #
HAVE_XSLTPROC_TRUE = 
IDN_CFLAGS = -I/sw/include  
IDN_LIBS = -L/sw/lib -lidn
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_I18N_FALSE = #
INSTALL_I18N_TRUE = 
INSTALL_PIXMAPS_FALSE = #
INSTALL_PIXMAPS_TRUE = 
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_SSL_CERTIFICATES_FALSE = #
INSTALL_SSL_CERTIFICATES_TRUE = 
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = -lintl 
INTLTOOL_CAVES_RULE = %.caves:     %.caves.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_DESKTOP_RULE = %.desktop:   %.desktop.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_DIRECTORY_RULE = %.directory: %.directory.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_EXTRACT = /sw/bin/intltool-extract
INTLTOOL_KBD_RULE = %.kbd:       %.kbd.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -m -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_KEYS_RULE = %.keys:      %.keys.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -k -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_MERGE = /sw/bin/intltool-merge
INTLTOOL_OAF_RULE = %.oaf:       %.oaf.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -o -p $(top_srcdir)/po $< $@
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_POLICY_RULE = %.policy:    %.policy.in    $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_PONG_RULE = %.pong:      %.pong.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_PROP_RULE = %.prop:      %.prop.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SCHEMAS_RULE = %.schemas:   %.schemas.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -s -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SERVER_RULE = %.server:    %.server.in    $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -o -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SERVICE_RULE = %.service: %.service.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SHEET_RULE = %.sheet:     %.sheet.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SOUNDLIST_RULE = %.soundlist: %.soundlist.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_THEME_RULE = %.theme:     %.theme.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_UI_RULE = %.ui:        %.ui.in        $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_UPDATE = /sw/bin/intltool-update
INTLTOOL_XAM_RULE = %.xam:       %.xml.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_XML_NOMERGE_RULE = %.xml:       %.xml.in       $(INTLTOOL_MERGE) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u /tmp $< $@
INTLTOOL_XML_RULE = %.xml:       %.xml.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
KRB4_CFLAGS = 
KRB4_LDFLAGS = 
KRB4_LIBS = 
LD = /usr/libexec/gcc/i686-apple-darwin10/4.2.1/ld
LDADD = 
LDFLAGS =  -L/sw/lib
LIBOBJS = 
LIBPERL_A = 
LIBS = -lresolv  -framework IOKit -framework CoreFoundation
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBXML_CFLAGS = -I/sw/include/libxml2 -I/sw/include
LIBXML_LIBS = -L/sw/lib -lxml2
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/deanchen/chimein/pidgin-2.7.3/missing --run makeinfo
MEANWHILE_CFLAGS = 
MEANWHILE_LIBS = 
MKINSTALLDIRS = ./mkinstalldirs
MONO_CFLAGS = 
MONO_LIBS = 
MSGFMT = /sw/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /sw/bin/msgmerge
NETWORKMANAGER_CFLAGS = 
NETWORKMANAGER_LIBS = 
NM = /usr/bin/nm
NMEDIT = nmedit
NSS_CFLAGS =  
NSS_LIBS =  
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = pidgin
PACKAGE_BUGREPORT = devel@pidgin.im
PACKAGE_NAME = pidgin
PACKAGE_STRING = pidgin 2.7.3
PACKAGE_TARNAME = pidgin
PACKAGE_URL = 
PACKAGE_VERSION = 2.7.3
PANGO_CFLAGS = 
PANGO_LIBS = 
PATH_SEPARATOR = :
PERL = 
PERL_CFLAGS = 
PERL_LIBS = 
PKG_CONFIG = /sw/bin/pkg-config
PLUGINS_DEFINE = #define PURPLE_PLUGINS 1
PLUGINS_FALSE = #
PLUGINS_TRUE = 
POFILES =  af.po am.po ar.po az.po be@latin.po bg.po bn.po bn_IN.po bs.po ca.po ca@valencia.po cs.po da.po de.po dz.po el.po en_AU.po en_CA.po en_GB.po eo.po es.po et.po eu.po fa.po fi.po fr.po ga.po gl.po gu.po he.po hi.po hu.po hy.po id.po it.po ja.po ka.po km.po kn.po ko.po ku.po lo.po lt.po mk.po mn.po mr.po ms_MY.po my_MM.po nb.po ne.po nl.po nn.po oc.po or.po pa.po pl.po pt_BR.po pt.po ps.po ro.po ru.po si.po sk.po sl.po sq.po sr.po sr@latin.po sv.po sw.po ta.po te.po th.po tr.po uk.po ur.po vi.po xh.po zh_CN.po zh_HK.po zh_TW.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PURPLE_AVAILABLE_FALSE = #
PURPLE_AVAILABLE_TRUE = 
PURPLE_LT_VERSION_INFO = 7:3:7
PURPLE_MAJOR_VERSION = 2
PURPLE_MICRO_VERSION = 3
PURPLE_MINOR_VERSION = 7
PURPLE_VERSION = purple_display_version
PYTHON = 
PY_CFLAGS = 
PY_LIBS = 
RANLIB = ranlib
SASL_LIBS = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SILC_CFLAGS = -I/sw/include/silc  
SILC_LIBS = -L/sw/lib -lsilcclient -lsilc -ldl -lpthread
SM_LIBS = 
SQLITE3_CFLAGS = 
SQLITE3_LIBS = 
SSL_CERTIFICATES_DIR = 
STARTUP_NOTIFICATION_CFLAGS = 
STARTUP_NOTIFICATION_LIBS = 
STATIC_BONJOUR_FALSE = 
STATIC_BONJOUR_TRUE = #
STATIC_GG_FALSE = 
STATIC_GG_TRUE = #
STATIC_IRC_FALSE = 
STATIC_IRC_TRUE = #
STATIC_JABBER_FALSE = 
STATIC_JABBER_TRUE = #
STATIC_LINK_LIBS = 
STATIC_MSN_FALSE = 
STATIC_MSN_TRUE = #
STATIC_MXIT_FALSE = 
STATIC_MXIT_TRUE = #
STATIC_MYSPACE_FALSE = 
STATIC_MYSPACE_TRUE = #
STATIC_NOVELL_FALSE = 
STATIC_NOVELL_TRUE = #
STATIC_OSCAR_FALSE = 
STATIC_OSCAR_TRUE = #
STATIC_PRPLS = 
STATIC_QQ_FALSE = 
STATIC_QQ_TRUE = #
STATIC_SAMETIME_FALSE = 
STATIC_SAMETIME_TRUE = #
STATIC_SILC_FALSE = 
STATIC_SILC_TRUE = #
STATIC_SIMPLE_FALSE = 
STATIC_SIMPLE_TRUE = #
STATIC_YAHOO_FALSE = 
STATIC_YAHOO_TRUE = #
STATIC_ZEPHYR_FALSE = 
STATIC_ZEPHYR_TRUE = #
STRIP = strip
TCL_CFLAGS = 
TCL_LIBS = 
TK_LIBS = 
USE_CYRUS_SASL_FALSE = 
USE_CYRUS_SASL_TRUE = #
USE_GCONFTOOL_FALSE = #
USE_GCONFTOOL_TRUE = 
USE_GNUTLS_FALSE = #
USE_GNUTLS_TRUE = 
USE_INTERNAL_LIBGADU_FALSE = #
USE_INTERNAL_LIBGADU_TRUE = 
USE_MONO_FALSE = 
USE_MONO_TRUE = #
USE_NLS = yes
USE_NSS_FALSE = 
USE_NSS_TRUE = #
USE_PERL_FALSE = 
USE_PERL_TRUE = #
USE_TCL_FALSE = 
USE_TCL_TRUE = #
USE_TK_FALSE = 
USE_TK_TRUE = #
USE_VV_FALSE = 
USE_VV_TRUE = #
VERSION = 2.7.3
X11_CFLAGS = 
X11_LIBS = 
XGETTEXT = /sw/bin/xgettext
XMKMF = 
XSLTPROC = 
XSS_LIBS = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS =  -L/usr/X11/lib -R/usr/X11/lib
X_PRE_LIBS =  -lSM -lICE
ZEPHYR_CFLAGS = 
ZEPHYR_LDFLAGS = 
ZEPHYR_LIBS = 
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin10.4.0
build_alias = 
build_cpu = i386
build_os = darwin10.4.0
build_vendor = apple
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
enable_dbus = no
enable_devhelp = yes
enable_dot = yes
enable_doxygen = no
exec_prefix = ${prefix}
host = i386-apple-darwin10.4.0
host_alias = 
host_cpu = i386
host_os = darwin10.4.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /Users/deanchen/chimein/pidgin-2.7.3/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = /bin/echo
mandir = ${datarootdir}/man
mkdir_p = $(mkinstalldirs)
oldincludedir = /usr/include
pdfdir = ${docdir}
perlpath = 
pidginpath = /sw/bin/pidgin
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sedpath = /usr/bin/sed
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
pkgdir = $(libdir)/purple-$(PURPLE_MAJOR_VERSION)
ZEPHYRSOURCES = \
	ZAsyncLocate.c \
	ZCkAuth.c \
	ZCkIfNot.c \
	ZClosePort.c \
	ZCmpUID.c \
	ZCmpUIDP.c \
	ZFlsLocs.c \
	ZFlsSubs.c \
	ZFmtAuth.c \
	ZFmtList.c \
	ZFmtNotice.c \
	ZFmtRaw.c \
	ZFmtRawLst.c \
	ZFmtSmRLst.c \
	ZFmtSmRaw.c \
	ZFreeNot.c \
	ZGetLocs.c \
	ZGetSender.c \
	ZGetSubs.c \
	ZGetWGPort.c \
	ZIfNotice.c \
	ZInit.c \
	ZLocations.c \
	ZMakeAscii.c \
	ZMkAuth.c \
	ZNewLocU.c \
	ZOpenPort.c \
	ZParseNot.c \
	ZPeekIfNot.c \
	ZPeekNot.c \
	ZPeekPkt.c \
	ZPending.c \
	ZReadAscii.c \
	ZRecvNot.c \
	ZRecvPkt.c \
	ZRetSubs.c \
	ZSendList.c \
	ZSendNot.c \
	ZSendPkt.c \
	ZSendRLst.c \
	ZSendRaw.c \
	ZSetDest.c \
	ZSetFD.c \
	ZSetSrv.c \
	ZSubs.c \
	ZVariables.c \
	ZWait4Not.c \
	ZhmStat.c \
	Zinternal.c \
	com_err.h \
	error_message.c \
	error_table.h \
	et_name.c \
	init_et.c \
	internal.h \
	mit-copyright.h \
	mit-sipb-copyright.h \
	sysdep.h \
	zephyr_err.c \
	zephyr_err.h \
	zephyr_internal.h \
	zephyr.c

ZEPHYRSOURCESEXT = zephyr.c
AM_CFLAGS = $(st)
ZEPHYRLIBS = $(KRB4_LDFLAGS) $(KRB4_LIBS)
ZEPHYRLIBSEXT = $(ZEPHYR_LDFLAGS) $(ZEPHYR_LIBS)
libzephyr_la_LDFLAGS = -module -avoid-version
st = -Dlint
#st = -DPURPLE_STATIC_PRPL -Dlint
#noinst_LTLIBRARIES = libzephyr.la
libzephyr_la_SOURCES = $(ZEPHYRSOURCES)
#libzephyr_la_SOURCES = $(ZEPHYRSOURCESEXT)
#libzephyr_la_SOURCES = $(ZEPHYRSOURCES)
#libzephyr_la_CFLAGS = $(AM_CFLAGS)
libzephyr_la_LIBADD = $(GLIB_LIBS) $(ZEPHYRLIBS)
#libzephyr_la_LIBADD = $(GLIB_LIBS) $(ZEPHYRLIBSEXT)
#libzephyr_la_LIBADD = $(ZEPHYRLIBS)
pkg_LTLIBRARIES = libzephyr.la
AM_CPPFLAGS = \
	-I$(top_srcdir) \
	-I$(top_srcdir)/libpurple \
	-I$(top_builddir)/libpurple \
	-I$(top_srcdir)/libpurple/protocols \
	-DCONFDIR=\"$(sysconfdir)\" \
	$(GLIB_CFLAGS) \
	$(KRB4_CFLAGS) \
	$(DEBUG_CFLAGS)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  libpurple/protocols/zephyr/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  libpurple/protocols/zephyr/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-pkgLTLIBRARIES: $(pkg_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pkgdir)" || $(mkdir_p) "$(DESTDIR)$(pkgdir)"
	@list='$(pkg_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(pkgLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(pkgdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(pkgLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(pkgdir)/$$f"; \
	  else :; fi; \
	done

uninstall-pkgLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(pkg_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(pkgdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(pkgdir)/$$p"; \
	done

clean-pkgLTLIBRARIES:
	-test -z "$(pkg_LTLIBRARIES)" || rm -f $(pkg_LTLIBRARIES)
	@list='$(pkg_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libzephyr.la: $(libzephyr_la_OBJECTS) $(libzephyr_la_DEPENDENCIES) 
	$(LINK) $(am_libzephyr_la_rpath) $(libzephyr_la_LDFLAGS) $(libzephyr_la_OBJECTS) $(libzephyr_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libzephyr_la-ZAsyncLocate.Plo
include ./$(DEPDIR)/libzephyr_la-ZCkAuth.Plo
include ./$(DEPDIR)/libzephyr_la-ZCkIfNot.Plo
include ./$(DEPDIR)/libzephyr_la-ZClosePort.Plo
include ./$(DEPDIR)/libzephyr_la-ZCmpUID.Plo
include ./$(DEPDIR)/libzephyr_la-ZCmpUIDP.Plo
include ./$(DEPDIR)/libzephyr_la-ZFlsLocs.Plo
include ./$(DEPDIR)/libzephyr_la-ZFlsSubs.Plo
include ./$(DEPDIR)/libzephyr_la-ZFmtAuth.Plo
include ./$(DEPDIR)/libzephyr_la-ZFmtList.Plo
include ./$(DEPDIR)/libzephyr_la-ZFmtNotice.Plo
include ./$(DEPDIR)/libzephyr_la-ZFmtRaw.Plo
include ./$(DEPDIR)/libzephyr_la-ZFmtRawLst.Plo
include ./$(DEPDIR)/libzephyr_la-ZFmtSmRLst.Plo
include ./$(DEPDIR)/libzephyr_la-ZFmtSmRaw.Plo
include ./$(DEPDIR)/libzephyr_la-ZFreeNot.Plo
include ./$(DEPDIR)/libzephyr_la-ZGetLocs.Plo
include ./$(DEPDIR)/libzephyr_la-ZGetSender.Plo
include ./$(DEPDIR)/libzephyr_la-ZGetSubs.Plo
include ./$(DEPDIR)/libzephyr_la-ZGetWGPort.Plo
include ./$(DEPDIR)/libzephyr_la-ZIfNotice.Plo
include ./$(DEPDIR)/libzephyr_la-ZInit.Plo
include ./$(DEPDIR)/libzephyr_la-ZLocations.Plo
include ./$(DEPDIR)/libzephyr_la-ZMakeAscii.Plo
include ./$(DEPDIR)/libzephyr_la-ZMkAuth.Plo
include ./$(DEPDIR)/libzephyr_la-ZNewLocU.Plo
include ./$(DEPDIR)/libzephyr_la-ZOpenPort.Plo
include ./$(DEPDIR)/libzephyr_la-ZParseNot.Plo
include ./$(DEPDIR)/libzephyr_la-ZPeekIfNot.Plo
include ./$(DEPDIR)/libzephyr_la-ZPeekNot.Plo
include ./$(DEPDIR)/libzephyr_la-ZPeekPkt.Plo
include ./$(DEPDIR)/libzephyr_la-ZPending.Plo
include ./$(DEPDIR)/libzephyr_la-ZReadAscii.Plo
include ./$(DEPDIR)/libzephyr_la-ZRecvNot.Plo
include ./$(DEPDIR)/libzephyr_la-ZRecvPkt.Plo
include ./$(DEPDIR)/libzephyr_la-ZRetSubs.Plo
include ./$(DEPDIR)/libzephyr_la-ZSendList.Plo
include ./$(DEPDIR)/libzephyr_la-ZSendNot.Plo
include ./$(DEPDIR)/libzephyr_la-ZSendPkt.Plo
include ./$(DEPDIR)/libzephyr_la-ZSendRLst.Plo
include ./$(DEPDIR)/libzephyr_la-ZSendRaw.Plo
include ./$(DEPDIR)/libzephyr_la-ZSetDest.Plo
include ./$(DEPDIR)/libzephyr_la-ZSetFD.Plo
include ./$(DEPDIR)/libzephyr_la-ZSetSrv.Plo
include ./$(DEPDIR)/libzephyr_la-ZSubs.Plo
include ./$(DEPDIR)/libzephyr_la-ZVariables.Plo
include ./$(DEPDIR)/libzephyr_la-ZWait4Not.Plo
include ./$(DEPDIR)/libzephyr_la-ZhmStat.Plo
include ./$(DEPDIR)/libzephyr_la-Zinternal.Plo
include ./$(DEPDIR)/libzephyr_la-error_message.Plo
include ./$(DEPDIR)/libzephyr_la-et_name.Plo
include ./$(DEPDIR)/libzephyr_la-init_et.Plo
include ./$(DEPDIR)/libzephyr_la-zephyr.Plo
include ./$(DEPDIR)/libzephyr_la-zephyr_err.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libzephyr_la-ZAsyncLocate.lo: ZAsyncLocate.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZAsyncLocate.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZAsyncLocate.Tpo" -c -o libzephyr_la-ZAsyncLocate.lo `test -f 'ZAsyncLocate.c' || echo '$(srcdir)/'`ZAsyncLocate.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZAsyncLocate.Tpo" "$(DEPDIR)/libzephyr_la-ZAsyncLocate.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZAsyncLocate.Tpo"; exit 1; fi
#	source='ZAsyncLocate.c' object='libzephyr_la-ZAsyncLocate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZAsyncLocate.lo `test -f 'ZAsyncLocate.c' || echo '$(srcdir)/'`ZAsyncLocate.c

libzephyr_la-ZCkAuth.lo: ZCkAuth.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZCkAuth.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZCkAuth.Tpo" -c -o libzephyr_la-ZCkAuth.lo `test -f 'ZCkAuth.c' || echo '$(srcdir)/'`ZCkAuth.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZCkAuth.Tpo" "$(DEPDIR)/libzephyr_la-ZCkAuth.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZCkAuth.Tpo"; exit 1; fi
#	source='ZCkAuth.c' object='libzephyr_la-ZCkAuth.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZCkAuth.lo `test -f 'ZCkAuth.c' || echo '$(srcdir)/'`ZCkAuth.c

libzephyr_la-ZCkIfNot.lo: ZCkIfNot.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZCkIfNot.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZCkIfNot.Tpo" -c -o libzephyr_la-ZCkIfNot.lo `test -f 'ZCkIfNot.c' || echo '$(srcdir)/'`ZCkIfNot.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZCkIfNot.Tpo" "$(DEPDIR)/libzephyr_la-ZCkIfNot.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZCkIfNot.Tpo"; exit 1; fi
#	source='ZCkIfNot.c' object='libzephyr_la-ZCkIfNot.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZCkIfNot.lo `test -f 'ZCkIfNot.c' || echo '$(srcdir)/'`ZCkIfNot.c

libzephyr_la-ZClosePort.lo: ZClosePort.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZClosePort.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZClosePort.Tpo" -c -o libzephyr_la-ZClosePort.lo `test -f 'ZClosePort.c' || echo '$(srcdir)/'`ZClosePort.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZClosePort.Tpo" "$(DEPDIR)/libzephyr_la-ZClosePort.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZClosePort.Tpo"; exit 1; fi
#	source='ZClosePort.c' object='libzephyr_la-ZClosePort.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZClosePort.lo `test -f 'ZClosePort.c' || echo '$(srcdir)/'`ZClosePort.c

libzephyr_la-ZCmpUID.lo: ZCmpUID.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZCmpUID.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZCmpUID.Tpo" -c -o libzephyr_la-ZCmpUID.lo `test -f 'ZCmpUID.c' || echo '$(srcdir)/'`ZCmpUID.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZCmpUID.Tpo" "$(DEPDIR)/libzephyr_la-ZCmpUID.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZCmpUID.Tpo"; exit 1; fi
#	source='ZCmpUID.c' object='libzephyr_la-ZCmpUID.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZCmpUID.lo `test -f 'ZCmpUID.c' || echo '$(srcdir)/'`ZCmpUID.c

libzephyr_la-ZCmpUIDP.lo: ZCmpUIDP.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZCmpUIDP.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZCmpUIDP.Tpo" -c -o libzephyr_la-ZCmpUIDP.lo `test -f 'ZCmpUIDP.c' || echo '$(srcdir)/'`ZCmpUIDP.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZCmpUIDP.Tpo" "$(DEPDIR)/libzephyr_la-ZCmpUIDP.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZCmpUIDP.Tpo"; exit 1; fi
#	source='ZCmpUIDP.c' object='libzephyr_la-ZCmpUIDP.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZCmpUIDP.lo `test -f 'ZCmpUIDP.c' || echo '$(srcdir)/'`ZCmpUIDP.c

libzephyr_la-ZFlsLocs.lo: ZFlsLocs.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZFlsLocs.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZFlsLocs.Tpo" -c -o libzephyr_la-ZFlsLocs.lo `test -f 'ZFlsLocs.c' || echo '$(srcdir)/'`ZFlsLocs.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZFlsLocs.Tpo" "$(DEPDIR)/libzephyr_la-ZFlsLocs.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZFlsLocs.Tpo"; exit 1; fi
#	source='ZFlsLocs.c' object='libzephyr_la-ZFlsLocs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZFlsLocs.lo `test -f 'ZFlsLocs.c' || echo '$(srcdir)/'`ZFlsLocs.c

libzephyr_la-ZFlsSubs.lo: ZFlsSubs.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZFlsSubs.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZFlsSubs.Tpo" -c -o libzephyr_la-ZFlsSubs.lo `test -f 'ZFlsSubs.c' || echo '$(srcdir)/'`ZFlsSubs.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZFlsSubs.Tpo" "$(DEPDIR)/libzephyr_la-ZFlsSubs.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZFlsSubs.Tpo"; exit 1; fi
#	source='ZFlsSubs.c' object='libzephyr_la-ZFlsSubs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZFlsSubs.lo `test -f 'ZFlsSubs.c' || echo '$(srcdir)/'`ZFlsSubs.c

libzephyr_la-ZFmtAuth.lo: ZFmtAuth.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZFmtAuth.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZFmtAuth.Tpo" -c -o libzephyr_la-ZFmtAuth.lo `test -f 'ZFmtAuth.c' || echo '$(srcdir)/'`ZFmtAuth.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZFmtAuth.Tpo" "$(DEPDIR)/libzephyr_la-ZFmtAuth.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZFmtAuth.Tpo"; exit 1; fi
#	source='ZFmtAuth.c' object='libzephyr_la-ZFmtAuth.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZFmtAuth.lo `test -f 'ZFmtAuth.c' || echo '$(srcdir)/'`ZFmtAuth.c

libzephyr_la-ZFmtList.lo: ZFmtList.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZFmtList.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZFmtList.Tpo" -c -o libzephyr_la-ZFmtList.lo `test -f 'ZFmtList.c' || echo '$(srcdir)/'`ZFmtList.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZFmtList.Tpo" "$(DEPDIR)/libzephyr_la-ZFmtList.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZFmtList.Tpo"; exit 1; fi
#	source='ZFmtList.c' object='libzephyr_la-ZFmtList.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZFmtList.lo `test -f 'ZFmtList.c' || echo '$(srcdir)/'`ZFmtList.c

libzephyr_la-ZFmtNotice.lo: ZFmtNotice.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZFmtNotice.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZFmtNotice.Tpo" -c -o libzephyr_la-ZFmtNotice.lo `test -f 'ZFmtNotice.c' || echo '$(srcdir)/'`ZFmtNotice.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZFmtNotice.Tpo" "$(DEPDIR)/libzephyr_la-ZFmtNotice.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZFmtNotice.Tpo"; exit 1; fi
#	source='ZFmtNotice.c' object='libzephyr_la-ZFmtNotice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZFmtNotice.lo `test -f 'ZFmtNotice.c' || echo '$(srcdir)/'`ZFmtNotice.c

libzephyr_la-ZFmtRaw.lo: ZFmtRaw.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZFmtRaw.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZFmtRaw.Tpo" -c -o libzephyr_la-ZFmtRaw.lo `test -f 'ZFmtRaw.c' || echo '$(srcdir)/'`ZFmtRaw.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZFmtRaw.Tpo" "$(DEPDIR)/libzephyr_la-ZFmtRaw.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZFmtRaw.Tpo"; exit 1; fi
#	source='ZFmtRaw.c' object='libzephyr_la-ZFmtRaw.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZFmtRaw.lo `test -f 'ZFmtRaw.c' || echo '$(srcdir)/'`ZFmtRaw.c

libzephyr_la-ZFmtRawLst.lo: ZFmtRawLst.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZFmtRawLst.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZFmtRawLst.Tpo" -c -o libzephyr_la-ZFmtRawLst.lo `test -f 'ZFmtRawLst.c' || echo '$(srcdir)/'`ZFmtRawLst.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZFmtRawLst.Tpo" "$(DEPDIR)/libzephyr_la-ZFmtRawLst.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZFmtRawLst.Tpo"; exit 1; fi
#	source='ZFmtRawLst.c' object='libzephyr_la-ZFmtRawLst.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZFmtRawLst.lo `test -f 'ZFmtRawLst.c' || echo '$(srcdir)/'`ZFmtRawLst.c

libzephyr_la-ZFmtSmRLst.lo: ZFmtSmRLst.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZFmtSmRLst.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZFmtSmRLst.Tpo" -c -o libzephyr_la-ZFmtSmRLst.lo `test -f 'ZFmtSmRLst.c' || echo '$(srcdir)/'`ZFmtSmRLst.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZFmtSmRLst.Tpo" "$(DEPDIR)/libzephyr_la-ZFmtSmRLst.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZFmtSmRLst.Tpo"; exit 1; fi
#	source='ZFmtSmRLst.c' object='libzephyr_la-ZFmtSmRLst.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZFmtSmRLst.lo `test -f 'ZFmtSmRLst.c' || echo '$(srcdir)/'`ZFmtSmRLst.c

libzephyr_la-ZFmtSmRaw.lo: ZFmtSmRaw.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZFmtSmRaw.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZFmtSmRaw.Tpo" -c -o libzephyr_la-ZFmtSmRaw.lo `test -f 'ZFmtSmRaw.c' || echo '$(srcdir)/'`ZFmtSmRaw.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZFmtSmRaw.Tpo" "$(DEPDIR)/libzephyr_la-ZFmtSmRaw.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZFmtSmRaw.Tpo"; exit 1; fi
#	source='ZFmtSmRaw.c' object='libzephyr_la-ZFmtSmRaw.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZFmtSmRaw.lo `test -f 'ZFmtSmRaw.c' || echo '$(srcdir)/'`ZFmtSmRaw.c

libzephyr_la-ZFreeNot.lo: ZFreeNot.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZFreeNot.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZFreeNot.Tpo" -c -o libzephyr_la-ZFreeNot.lo `test -f 'ZFreeNot.c' || echo '$(srcdir)/'`ZFreeNot.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZFreeNot.Tpo" "$(DEPDIR)/libzephyr_la-ZFreeNot.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZFreeNot.Tpo"; exit 1; fi
#	source='ZFreeNot.c' object='libzephyr_la-ZFreeNot.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZFreeNot.lo `test -f 'ZFreeNot.c' || echo '$(srcdir)/'`ZFreeNot.c

libzephyr_la-ZGetLocs.lo: ZGetLocs.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZGetLocs.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZGetLocs.Tpo" -c -o libzephyr_la-ZGetLocs.lo `test -f 'ZGetLocs.c' || echo '$(srcdir)/'`ZGetLocs.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZGetLocs.Tpo" "$(DEPDIR)/libzephyr_la-ZGetLocs.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZGetLocs.Tpo"; exit 1; fi
#	source='ZGetLocs.c' object='libzephyr_la-ZGetLocs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZGetLocs.lo `test -f 'ZGetLocs.c' || echo '$(srcdir)/'`ZGetLocs.c

libzephyr_la-ZGetSender.lo: ZGetSender.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZGetSender.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZGetSender.Tpo" -c -o libzephyr_la-ZGetSender.lo `test -f 'ZGetSender.c' || echo '$(srcdir)/'`ZGetSender.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZGetSender.Tpo" "$(DEPDIR)/libzephyr_la-ZGetSender.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZGetSender.Tpo"; exit 1; fi
#	source='ZGetSender.c' object='libzephyr_la-ZGetSender.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZGetSender.lo `test -f 'ZGetSender.c' || echo '$(srcdir)/'`ZGetSender.c

libzephyr_la-ZGetSubs.lo: ZGetSubs.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZGetSubs.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZGetSubs.Tpo" -c -o libzephyr_la-ZGetSubs.lo `test -f 'ZGetSubs.c' || echo '$(srcdir)/'`ZGetSubs.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZGetSubs.Tpo" "$(DEPDIR)/libzephyr_la-ZGetSubs.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZGetSubs.Tpo"; exit 1; fi
#	source='ZGetSubs.c' object='libzephyr_la-ZGetSubs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZGetSubs.lo `test -f 'ZGetSubs.c' || echo '$(srcdir)/'`ZGetSubs.c

libzephyr_la-ZGetWGPort.lo: ZGetWGPort.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZGetWGPort.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZGetWGPort.Tpo" -c -o libzephyr_la-ZGetWGPort.lo `test -f 'ZGetWGPort.c' || echo '$(srcdir)/'`ZGetWGPort.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZGetWGPort.Tpo" "$(DEPDIR)/libzephyr_la-ZGetWGPort.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZGetWGPort.Tpo"; exit 1; fi
#	source='ZGetWGPort.c' object='libzephyr_la-ZGetWGPort.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZGetWGPort.lo `test -f 'ZGetWGPort.c' || echo '$(srcdir)/'`ZGetWGPort.c

libzephyr_la-ZIfNotice.lo: ZIfNotice.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZIfNotice.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZIfNotice.Tpo" -c -o libzephyr_la-ZIfNotice.lo `test -f 'ZIfNotice.c' || echo '$(srcdir)/'`ZIfNotice.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZIfNotice.Tpo" "$(DEPDIR)/libzephyr_la-ZIfNotice.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZIfNotice.Tpo"; exit 1; fi
#	source='ZIfNotice.c' object='libzephyr_la-ZIfNotice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZIfNotice.lo `test -f 'ZIfNotice.c' || echo '$(srcdir)/'`ZIfNotice.c

libzephyr_la-ZInit.lo: ZInit.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZInit.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZInit.Tpo" -c -o libzephyr_la-ZInit.lo `test -f 'ZInit.c' || echo '$(srcdir)/'`ZInit.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZInit.Tpo" "$(DEPDIR)/libzephyr_la-ZInit.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZInit.Tpo"; exit 1; fi
#	source='ZInit.c' object='libzephyr_la-ZInit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZInit.lo `test -f 'ZInit.c' || echo '$(srcdir)/'`ZInit.c

libzephyr_la-ZLocations.lo: ZLocations.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZLocations.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZLocations.Tpo" -c -o libzephyr_la-ZLocations.lo `test -f 'ZLocations.c' || echo '$(srcdir)/'`ZLocations.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZLocations.Tpo" "$(DEPDIR)/libzephyr_la-ZLocations.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZLocations.Tpo"; exit 1; fi
#	source='ZLocations.c' object='libzephyr_la-ZLocations.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZLocations.lo `test -f 'ZLocations.c' || echo '$(srcdir)/'`ZLocations.c

libzephyr_la-ZMakeAscii.lo: ZMakeAscii.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZMakeAscii.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZMakeAscii.Tpo" -c -o libzephyr_la-ZMakeAscii.lo `test -f 'ZMakeAscii.c' || echo '$(srcdir)/'`ZMakeAscii.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZMakeAscii.Tpo" "$(DEPDIR)/libzephyr_la-ZMakeAscii.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZMakeAscii.Tpo"; exit 1; fi
#	source='ZMakeAscii.c' object='libzephyr_la-ZMakeAscii.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZMakeAscii.lo `test -f 'ZMakeAscii.c' || echo '$(srcdir)/'`ZMakeAscii.c

libzephyr_la-ZMkAuth.lo: ZMkAuth.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZMkAuth.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZMkAuth.Tpo" -c -o libzephyr_la-ZMkAuth.lo `test -f 'ZMkAuth.c' || echo '$(srcdir)/'`ZMkAuth.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZMkAuth.Tpo" "$(DEPDIR)/libzephyr_la-ZMkAuth.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZMkAuth.Tpo"; exit 1; fi
#	source='ZMkAuth.c' object='libzephyr_la-ZMkAuth.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZMkAuth.lo `test -f 'ZMkAuth.c' || echo '$(srcdir)/'`ZMkAuth.c

libzephyr_la-ZNewLocU.lo: ZNewLocU.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZNewLocU.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZNewLocU.Tpo" -c -o libzephyr_la-ZNewLocU.lo `test -f 'ZNewLocU.c' || echo '$(srcdir)/'`ZNewLocU.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZNewLocU.Tpo" "$(DEPDIR)/libzephyr_la-ZNewLocU.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZNewLocU.Tpo"; exit 1; fi
#	source='ZNewLocU.c' object='libzephyr_la-ZNewLocU.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZNewLocU.lo `test -f 'ZNewLocU.c' || echo '$(srcdir)/'`ZNewLocU.c

libzephyr_la-ZOpenPort.lo: ZOpenPort.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZOpenPort.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZOpenPort.Tpo" -c -o libzephyr_la-ZOpenPort.lo `test -f 'ZOpenPort.c' || echo '$(srcdir)/'`ZOpenPort.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZOpenPort.Tpo" "$(DEPDIR)/libzephyr_la-ZOpenPort.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZOpenPort.Tpo"; exit 1; fi
#	source='ZOpenPort.c' object='libzephyr_la-ZOpenPort.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZOpenPort.lo `test -f 'ZOpenPort.c' || echo '$(srcdir)/'`ZOpenPort.c

libzephyr_la-ZParseNot.lo: ZParseNot.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZParseNot.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZParseNot.Tpo" -c -o libzephyr_la-ZParseNot.lo `test -f 'ZParseNot.c' || echo '$(srcdir)/'`ZParseNot.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZParseNot.Tpo" "$(DEPDIR)/libzephyr_la-ZParseNot.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZParseNot.Tpo"; exit 1; fi
#	source='ZParseNot.c' object='libzephyr_la-ZParseNot.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZParseNot.lo `test -f 'ZParseNot.c' || echo '$(srcdir)/'`ZParseNot.c

libzephyr_la-ZPeekIfNot.lo: ZPeekIfNot.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZPeekIfNot.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZPeekIfNot.Tpo" -c -o libzephyr_la-ZPeekIfNot.lo `test -f 'ZPeekIfNot.c' || echo '$(srcdir)/'`ZPeekIfNot.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZPeekIfNot.Tpo" "$(DEPDIR)/libzephyr_la-ZPeekIfNot.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZPeekIfNot.Tpo"; exit 1; fi
#	source='ZPeekIfNot.c' object='libzephyr_la-ZPeekIfNot.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZPeekIfNot.lo `test -f 'ZPeekIfNot.c' || echo '$(srcdir)/'`ZPeekIfNot.c

libzephyr_la-ZPeekNot.lo: ZPeekNot.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZPeekNot.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZPeekNot.Tpo" -c -o libzephyr_la-ZPeekNot.lo `test -f 'ZPeekNot.c' || echo '$(srcdir)/'`ZPeekNot.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZPeekNot.Tpo" "$(DEPDIR)/libzephyr_la-ZPeekNot.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZPeekNot.Tpo"; exit 1; fi
#	source='ZPeekNot.c' object='libzephyr_la-ZPeekNot.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZPeekNot.lo `test -f 'ZPeekNot.c' || echo '$(srcdir)/'`ZPeekNot.c

libzephyr_la-ZPeekPkt.lo: ZPeekPkt.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZPeekPkt.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZPeekPkt.Tpo" -c -o libzephyr_la-ZPeekPkt.lo `test -f 'ZPeekPkt.c' || echo '$(srcdir)/'`ZPeekPkt.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZPeekPkt.Tpo" "$(DEPDIR)/libzephyr_la-ZPeekPkt.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZPeekPkt.Tpo"; exit 1; fi
#	source='ZPeekPkt.c' object='libzephyr_la-ZPeekPkt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZPeekPkt.lo `test -f 'ZPeekPkt.c' || echo '$(srcdir)/'`ZPeekPkt.c

libzephyr_la-ZPending.lo: ZPending.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZPending.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZPending.Tpo" -c -o libzephyr_la-ZPending.lo `test -f 'ZPending.c' || echo '$(srcdir)/'`ZPending.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZPending.Tpo" "$(DEPDIR)/libzephyr_la-ZPending.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZPending.Tpo"; exit 1; fi
#	source='ZPending.c' object='libzephyr_la-ZPending.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZPending.lo `test -f 'ZPending.c' || echo '$(srcdir)/'`ZPending.c

libzephyr_la-ZReadAscii.lo: ZReadAscii.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZReadAscii.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZReadAscii.Tpo" -c -o libzephyr_la-ZReadAscii.lo `test -f 'ZReadAscii.c' || echo '$(srcdir)/'`ZReadAscii.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZReadAscii.Tpo" "$(DEPDIR)/libzephyr_la-ZReadAscii.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZReadAscii.Tpo"; exit 1; fi
#	source='ZReadAscii.c' object='libzephyr_la-ZReadAscii.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZReadAscii.lo `test -f 'ZReadAscii.c' || echo '$(srcdir)/'`ZReadAscii.c

libzephyr_la-ZRecvNot.lo: ZRecvNot.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZRecvNot.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZRecvNot.Tpo" -c -o libzephyr_la-ZRecvNot.lo `test -f 'ZRecvNot.c' || echo '$(srcdir)/'`ZRecvNot.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZRecvNot.Tpo" "$(DEPDIR)/libzephyr_la-ZRecvNot.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZRecvNot.Tpo"; exit 1; fi
#	source='ZRecvNot.c' object='libzephyr_la-ZRecvNot.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZRecvNot.lo `test -f 'ZRecvNot.c' || echo '$(srcdir)/'`ZRecvNot.c

libzephyr_la-ZRecvPkt.lo: ZRecvPkt.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZRecvPkt.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZRecvPkt.Tpo" -c -o libzephyr_la-ZRecvPkt.lo `test -f 'ZRecvPkt.c' || echo '$(srcdir)/'`ZRecvPkt.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZRecvPkt.Tpo" "$(DEPDIR)/libzephyr_la-ZRecvPkt.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZRecvPkt.Tpo"; exit 1; fi
#	source='ZRecvPkt.c' object='libzephyr_la-ZRecvPkt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZRecvPkt.lo `test -f 'ZRecvPkt.c' || echo '$(srcdir)/'`ZRecvPkt.c

libzephyr_la-ZRetSubs.lo: ZRetSubs.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZRetSubs.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZRetSubs.Tpo" -c -o libzephyr_la-ZRetSubs.lo `test -f 'ZRetSubs.c' || echo '$(srcdir)/'`ZRetSubs.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZRetSubs.Tpo" "$(DEPDIR)/libzephyr_la-ZRetSubs.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZRetSubs.Tpo"; exit 1; fi
#	source='ZRetSubs.c' object='libzephyr_la-ZRetSubs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZRetSubs.lo `test -f 'ZRetSubs.c' || echo '$(srcdir)/'`ZRetSubs.c

libzephyr_la-ZSendList.lo: ZSendList.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZSendList.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZSendList.Tpo" -c -o libzephyr_la-ZSendList.lo `test -f 'ZSendList.c' || echo '$(srcdir)/'`ZSendList.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZSendList.Tpo" "$(DEPDIR)/libzephyr_la-ZSendList.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZSendList.Tpo"; exit 1; fi
#	source='ZSendList.c' object='libzephyr_la-ZSendList.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZSendList.lo `test -f 'ZSendList.c' || echo '$(srcdir)/'`ZSendList.c

libzephyr_la-ZSendNot.lo: ZSendNot.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZSendNot.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZSendNot.Tpo" -c -o libzephyr_la-ZSendNot.lo `test -f 'ZSendNot.c' || echo '$(srcdir)/'`ZSendNot.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZSendNot.Tpo" "$(DEPDIR)/libzephyr_la-ZSendNot.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZSendNot.Tpo"; exit 1; fi
#	source='ZSendNot.c' object='libzephyr_la-ZSendNot.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZSendNot.lo `test -f 'ZSendNot.c' || echo '$(srcdir)/'`ZSendNot.c

libzephyr_la-ZSendPkt.lo: ZSendPkt.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZSendPkt.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZSendPkt.Tpo" -c -o libzephyr_la-ZSendPkt.lo `test -f 'ZSendPkt.c' || echo '$(srcdir)/'`ZSendPkt.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZSendPkt.Tpo" "$(DEPDIR)/libzephyr_la-ZSendPkt.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZSendPkt.Tpo"; exit 1; fi
#	source='ZSendPkt.c' object='libzephyr_la-ZSendPkt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZSendPkt.lo `test -f 'ZSendPkt.c' || echo '$(srcdir)/'`ZSendPkt.c

libzephyr_la-ZSendRLst.lo: ZSendRLst.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZSendRLst.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZSendRLst.Tpo" -c -o libzephyr_la-ZSendRLst.lo `test -f 'ZSendRLst.c' || echo '$(srcdir)/'`ZSendRLst.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZSendRLst.Tpo" "$(DEPDIR)/libzephyr_la-ZSendRLst.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZSendRLst.Tpo"; exit 1; fi
#	source='ZSendRLst.c' object='libzephyr_la-ZSendRLst.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZSendRLst.lo `test -f 'ZSendRLst.c' || echo '$(srcdir)/'`ZSendRLst.c

libzephyr_la-ZSendRaw.lo: ZSendRaw.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZSendRaw.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZSendRaw.Tpo" -c -o libzephyr_la-ZSendRaw.lo `test -f 'ZSendRaw.c' || echo '$(srcdir)/'`ZSendRaw.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZSendRaw.Tpo" "$(DEPDIR)/libzephyr_la-ZSendRaw.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZSendRaw.Tpo"; exit 1; fi
#	source='ZSendRaw.c' object='libzephyr_la-ZSendRaw.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZSendRaw.lo `test -f 'ZSendRaw.c' || echo '$(srcdir)/'`ZSendRaw.c

libzephyr_la-ZSetDest.lo: ZSetDest.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZSetDest.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZSetDest.Tpo" -c -o libzephyr_la-ZSetDest.lo `test -f 'ZSetDest.c' || echo '$(srcdir)/'`ZSetDest.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZSetDest.Tpo" "$(DEPDIR)/libzephyr_la-ZSetDest.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZSetDest.Tpo"; exit 1; fi
#	source='ZSetDest.c' object='libzephyr_la-ZSetDest.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZSetDest.lo `test -f 'ZSetDest.c' || echo '$(srcdir)/'`ZSetDest.c

libzephyr_la-ZSetFD.lo: ZSetFD.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZSetFD.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZSetFD.Tpo" -c -o libzephyr_la-ZSetFD.lo `test -f 'ZSetFD.c' || echo '$(srcdir)/'`ZSetFD.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZSetFD.Tpo" "$(DEPDIR)/libzephyr_la-ZSetFD.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZSetFD.Tpo"; exit 1; fi
#	source='ZSetFD.c' object='libzephyr_la-ZSetFD.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZSetFD.lo `test -f 'ZSetFD.c' || echo '$(srcdir)/'`ZSetFD.c

libzephyr_la-ZSetSrv.lo: ZSetSrv.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZSetSrv.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZSetSrv.Tpo" -c -o libzephyr_la-ZSetSrv.lo `test -f 'ZSetSrv.c' || echo '$(srcdir)/'`ZSetSrv.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZSetSrv.Tpo" "$(DEPDIR)/libzephyr_la-ZSetSrv.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZSetSrv.Tpo"; exit 1; fi
#	source='ZSetSrv.c' object='libzephyr_la-ZSetSrv.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZSetSrv.lo `test -f 'ZSetSrv.c' || echo '$(srcdir)/'`ZSetSrv.c

libzephyr_la-ZSubs.lo: ZSubs.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZSubs.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZSubs.Tpo" -c -o libzephyr_la-ZSubs.lo `test -f 'ZSubs.c' || echo '$(srcdir)/'`ZSubs.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZSubs.Tpo" "$(DEPDIR)/libzephyr_la-ZSubs.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZSubs.Tpo"; exit 1; fi
#	source='ZSubs.c' object='libzephyr_la-ZSubs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZSubs.lo `test -f 'ZSubs.c' || echo '$(srcdir)/'`ZSubs.c

libzephyr_la-ZVariables.lo: ZVariables.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZVariables.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZVariables.Tpo" -c -o libzephyr_la-ZVariables.lo `test -f 'ZVariables.c' || echo '$(srcdir)/'`ZVariables.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZVariables.Tpo" "$(DEPDIR)/libzephyr_la-ZVariables.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZVariables.Tpo"; exit 1; fi
#	source='ZVariables.c' object='libzephyr_la-ZVariables.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZVariables.lo `test -f 'ZVariables.c' || echo '$(srcdir)/'`ZVariables.c

libzephyr_la-ZWait4Not.lo: ZWait4Not.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZWait4Not.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZWait4Not.Tpo" -c -o libzephyr_la-ZWait4Not.lo `test -f 'ZWait4Not.c' || echo '$(srcdir)/'`ZWait4Not.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZWait4Not.Tpo" "$(DEPDIR)/libzephyr_la-ZWait4Not.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZWait4Not.Tpo"; exit 1; fi
#	source='ZWait4Not.c' object='libzephyr_la-ZWait4Not.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZWait4Not.lo `test -f 'ZWait4Not.c' || echo '$(srcdir)/'`ZWait4Not.c

libzephyr_la-ZhmStat.lo: ZhmStat.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-ZhmStat.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-ZhmStat.Tpo" -c -o libzephyr_la-ZhmStat.lo `test -f 'ZhmStat.c' || echo '$(srcdir)/'`ZhmStat.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-ZhmStat.Tpo" "$(DEPDIR)/libzephyr_la-ZhmStat.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-ZhmStat.Tpo"; exit 1; fi
#	source='ZhmStat.c' object='libzephyr_la-ZhmStat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-ZhmStat.lo `test -f 'ZhmStat.c' || echo '$(srcdir)/'`ZhmStat.c

libzephyr_la-Zinternal.lo: Zinternal.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-Zinternal.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-Zinternal.Tpo" -c -o libzephyr_la-Zinternal.lo `test -f 'Zinternal.c' || echo '$(srcdir)/'`Zinternal.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-Zinternal.Tpo" "$(DEPDIR)/libzephyr_la-Zinternal.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-Zinternal.Tpo"; exit 1; fi
#	source='Zinternal.c' object='libzephyr_la-Zinternal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-Zinternal.lo `test -f 'Zinternal.c' || echo '$(srcdir)/'`Zinternal.c

libzephyr_la-error_message.lo: error_message.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-error_message.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-error_message.Tpo" -c -o libzephyr_la-error_message.lo `test -f 'error_message.c' || echo '$(srcdir)/'`error_message.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-error_message.Tpo" "$(DEPDIR)/libzephyr_la-error_message.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-error_message.Tpo"; exit 1; fi
#	source='error_message.c' object='libzephyr_la-error_message.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-error_message.lo `test -f 'error_message.c' || echo '$(srcdir)/'`error_message.c

libzephyr_la-et_name.lo: et_name.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-et_name.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-et_name.Tpo" -c -o libzephyr_la-et_name.lo `test -f 'et_name.c' || echo '$(srcdir)/'`et_name.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-et_name.Tpo" "$(DEPDIR)/libzephyr_la-et_name.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-et_name.Tpo"; exit 1; fi
#	source='et_name.c' object='libzephyr_la-et_name.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-et_name.lo `test -f 'et_name.c' || echo '$(srcdir)/'`et_name.c

libzephyr_la-init_et.lo: init_et.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-init_et.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-init_et.Tpo" -c -o libzephyr_la-init_et.lo `test -f 'init_et.c' || echo '$(srcdir)/'`init_et.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-init_et.Tpo" "$(DEPDIR)/libzephyr_la-init_et.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-init_et.Tpo"; exit 1; fi
#	source='init_et.c' object='libzephyr_la-init_et.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-init_et.lo `test -f 'init_et.c' || echo '$(srcdir)/'`init_et.c

libzephyr_la-zephyr_err.lo: zephyr_err.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-zephyr_err.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-zephyr_err.Tpo" -c -o libzephyr_la-zephyr_err.lo `test -f 'zephyr_err.c' || echo '$(srcdir)/'`zephyr_err.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-zephyr_err.Tpo" "$(DEPDIR)/libzephyr_la-zephyr_err.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-zephyr_err.Tpo"; exit 1; fi
#	source='zephyr_err.c' object='libzephyr_la-zephyr_err.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-zephyr_err.lo `test -f 'zephyr_err.c' || echo '$(srcdir)/'`zephyr_err.c

libzephyr_la-zephyr.lo: zephyr.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -MT libzephyr_la-zephyr.lo -MD -MP -MF "$(DEPDIR)/libzephyr_la-zephyr.Tpo" -c -o libzephyr_la-zephyr.lo `test -f 'zephyr.c' || echo '$(srcdir)/'`zephyr.c; \
	then mv -f "$(DEPDIR)/libzephyr_la-zephyr.Tpo" "$(DEPDIR)/libzephyr_la-zephyr.Plo"; else rm -f "$(DEPDIR)/libzephyr_la-zephyr.Tpo"; exit 1; fi
#	source='zephyr.c' object='libzephyr_la-zephyr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzephyr_la_CFLAGS) $(CFLAGS) -c -o libzephyr_la-zephyr.lo `test -f 'zephyr.c' || echo '$(srcdir)/'`zephyr.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(pkgdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-pkgLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-pkgLTLIBRARIES

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-pkgLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES clean-pkgLTLIBRARIES \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-pkgLTLIBRARIES \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am uninstall-pkgLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
