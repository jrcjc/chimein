# Makefile.in generated by automake 1.9.6 from Makefile.am.
# libpurple/protocols/jabber/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ../../..

pkgdatadir = $(datadir)/pidgin
pkglibdir = $(libdir)/pidgin
pkgincludedir = $(includedir)/pidgin
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin10.4.0
host_triplet = i386-apple-darwin10.4.0
#am__append_1 = auth_cyrus.c
subdir = libpurple/protocols/jabber
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(pkgdir)"
pkgLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(noinst_LTLIBRARIES) $(pkg_LTLIBRARIES)
am__DEPENDENCIES_1 =
libjabber_la_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__libjabber_la_SOURCES_DIST = adhoccommands.c adhoccommands.h auth.c \
	auth.h auth_digest_md5.c auth_plain.c auth_scram.c \
	auth_scram.h buddy.c buddy.h bosh.c bosh.h caps.c caps.h \
	chat.c chat.h data.c data.h disco.c disco.h google.c google.h \
	ibb.c ibb.h iq.c iq.h jabber.c jabber.h jingle/jingle.c \
	jingle/jingle.h jingle/content.c jingle/content.h \
	jingle/iceudp.c jingle/iceudp.h jingle/rawudp.c \
	jingle/rawudp.h jingle/rtp.c jingle/rtp.h jingle/session.c \
	jingle/session.h jingle/transport.c jingle/transport.h jutil.c \
	jutil.h message.c message.h namespaces.h oob.c oob.h parser.c \
	parser.h pep.c pep.h ping.c ping.h presence.c presence.h \
	roster.c roster.h si.c si.h useravatar.c useravatar.h \
	usermood.c usermood.h usernick.c usernick.h usertune.c \
	usertune.h xdata.c xdata.h auth_cyrus.c libxmpp.c
#am__objects_1 = libjabber_la-auth_cyrus.lo
am__objects_2 = libjabber_la-adhoccommands.lo libjabber_la-auth.lo \
	libjabber_la-auth_digest_md5.lo libjabber_la-auth_plain.lo \
	libjabber_la-auth_scram.lo libjabber_la-buddy.lo \
	libjabber_la-bosh.lo libjabber_la-caps.lo libjabber_la-chat.lo \
	libjabber_la-data.lo libjabber_la-disco.lo \
	libjabber_la-google.lo libjabber_la-ibb.lo libjabber_la-iq.lo \
	libjabber_la-jabber.lo libjabber_la-jingle.lo \
	libjabber_la-content.lo libjabber_la-iceudp.lo \
	libjabber_la-rawudp.lo libjabber_la-rtp.lo \
	libjabber_la-session.lo libjabber_la-transport.lo \
	libjabber_la-jutil.lo libjabber_la-message.lo \
	libjabber_la-oob.lo libjabber_la-parser.lo libjabber_la-pep.lo \
	libjabber_la-ping.lo libjabber_la-presence.lo \
	libjabber_la-roster.lo libjabber_la-si.lo \
	libjabber_la-useravatar.lo libjabber_la-usermood.lo \
	libjabber_la-usernick.lo libjabber_la-usertune.lo \
	libjabber_la-xdata.lo $(am__objects_1)
am_libjabber_la_OBJECTS = $(am__objects_2)
#am_libjabber_la_OBJECTS = $(am__objects_2) \
#	libjabber_la-libxmpp.lo
libjabber_la_OBJECTS = $(am_libjabber_la_OBJECTS)
am_libjabber_la_rpath = -rpath $(pkgdir)
#am_libjabber_la_rpath =
libxmpp_la_DEPENDENCIES = libjabber.la
am__libxmpp_la_SOURCES_DIST = libxmpp.c
am_libxmpp_la_OBJECTS = libxmpp.lo
libxmpp_la_OBJECTS = $(am_libxmpp_la_OBJECTS)
am_libxmpp_la_rpath = -rpath $(pkgdir)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libjabber_la_SOURCES) $(libxmpp_la_SOURCES)
DIST_SOURCES = $(am__libjabber_la_SOURCES_DIST) \
	$(am__libxmpp_la_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/deanchen/chimein/pidgin-2.7.3/missing --run aclocal-1.9
ALLOCA = 
ALL_LINGUAS = af am ar az be@latin bg bn bn_IN bs ca ca@valencia cs da de dz el en_AU en_CA en_GB eo es et eu fa fi fr ga gl gu he hi hu hy id it ja ka km kn ko ku lo lt mk mn mr ms_MY my_MM nb ne nl nn oc or pa pl pt_BR pt ps ro ru si sk sl sq sr sr@latin sv sw ta te th tr uk ur vi xh zh_CN zh_HK zh_TW
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /Users/deanchen/chimein/pidgin-2.7.3/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /Users/deanchen/chimein/pidgin-2.7.3/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/deanchen/chimein/pidgin-2.7.3/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/deanchen/chimein/pidgin-2.7.3/missing --run automake-1.9
AVAHI_CFLAGS = -I/sw/include -I/sw/include/glib-2.0 -I/sw/lib/glib-2.0/include -D_REENTRANT
AVAHI_LIBS = -L/sw/lib -lavahi-common -lavahi-client -lavahi-glib -lglib-2.0 -lintl
AWK = gawk
BUILD_GEVOLUTION_FALSE = 
BUILD_GEVOLUTION_TRUE = #
CATALOGS =  af.gmo am.gmo ar.gmo az.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo bs.gmo ca.gmo ca@valencia.gmo cs.gmo da.gmo de.gmo dz.gmo el.gmo en_AU.gmo en_CA.gmo en_GB.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hu.gmo hy.gmo id.gmo it.gmo ja.gmo ka.gmo km.gmo kn.gmo ko.gmo ku.gmo lo.gmo lt.gmo mk.gmo mn.gmo mr.gmo ms_MY.gmo my_MM.gmo nb.gmo ne.gmo nl.gmo nn.gmo oc.gmo or.gmo pa.gmo pl.gmo pt_BR.gmo pt.gmo ps.gmo ro.gmo ru.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@latin.gmo sv.gmo sw.gmo ta.gmo te.gmo th.gmo tr.gmo uk.gmo ur.gmo vi.gmo xh.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -g -O2
CHECK_CFLAGS = 
CHECK_LIBS = 
CPP = gcc -E
CPPFLAGS =  -I/sw/include
CYGPATH_W = echo
DATADIRNAME = share
DBUS_CFLAGS = 
DBUS_LIBS = 
DBUS_SERVICES_DIR = 
DEBUG_CFLAGS = -Wall  -DPURPLE_DISABLE_DEPRECATED -DPIDGIN_DISABLE_DEPRECATED -DFINCH_DISABLE_DEPRECATED -DGNT_DISABLE_DEPRECATED
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTRIB_FALSE = 
DISTRIB_TRUE = #
DOT = 
DOXYGEN = false
DSYMUTIL = dsymutil
DUMPBIN = 
DYNALOADER_A = 
DYNAMIC_PRPLS = bonjour gg irc jabber msn myspace mxit novell oscar qq silc simple yahoo zephyr
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
ENABLE_CAP_FALSE = 
ENABLE_CAP_TRUE = #
ENABLE_DBUS_FALSE = 
ENABLE_DBUS_TRUE = #
ENABLE_GESTURES_FALSE = 
ENABLE_GESTURES_TRUE = #
ENABLE_GNT_FALSE = 
ENABLE_GNT_TRUE = #
ENABLE_GTK_FALSE = 
ENABLE_GTK_TRUE = #
ENABLE_TRAYCOMPAT_FALSE = 
ENABLE_TRAYCOMPAT_TRUE = #
EVOLUTION_ADDRESSBOOK_CFLAGS = 
EVOLUTION_ADDRESSBOOK_LIBS = 
EXEEXT = 
EXTERNAL_LIBZEPHYR_FALSE = 
EXTERNAL_LIBZEPHYR_TRUE = #
FARSIGHT_CFLAGS = -I/sw/include/gstreamer-0.10 -I/sw/include/glib-2.0 -I/sw/lib/glib-2.0/include -I/sw/include/libxml2 -I/sw/include
FARSIGHT_LIBS = -L/sw/lib -lgstfarsight-0.10 -lgstbase-0.10 -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lxml2 -lglib-2.0 -lintl
FGREP = /usr/bin/grep -F
GADU_CFLAGS = 
GADU_LIBS = 
GCONFTOOL = /sw/bin/gconftool-2
GCONF_SCHEMAS_INSTALL_FALSE = 
GCONF_SCHEMAS_INSTALL_TRUE = #
GCONF_SCHEMA_CONFIG_SOURCE = xml:merged:/sw/etc/gconf/gconf.xml.defaults
GCONF_SCHEMA_FILE_DIR = $(sysconfdir)/gconf/schemas
GETTEXT_PACKAGE = pidgin
GLIB_CFLAGS = -I/sw/include/glib-2.0 -I/sw/lib/glib-2.0/include
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -L/sw/lib -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lglib-2.0 -lintl
GMOFILES =  af.gmo am.gmo ar.gmo az.gmo be@latin.gmo bg.gmo bn.gmo bn_IN.gmo bs.gmo ca.gmo ca@valencia.gmo cs.gmo da.gmo de.gmo dz.gmo el.gmo en_AU.gmo en_CA.gmo en_GB.gmo eo.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hu.gmo hy.gmo id.gmo it.gmo ja.gmo ka.gmo km.gmo kn.gmo ko.gmo ku.gmo lo.gmo lt.gmo mk.gmo mn.gmo mr.gmo ms_MY.gmo my_MM.gmo nb.gmo ne.gmo nl.gmo nn.gmo oc.gmo or.gmo pa.gmo pl.gmo pt_BR.gmo pt.gmo ps.gmo ro.gmo ru.gmo si.gmo sk.gmo sl.gmo sq.gmo sr.gmo sr@latin.gmo sv.gmo sw.gmo ta.gmo te.gmo th.gmo tr.gmo uk.gmo ur.gmo vi.gmo xh.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
GMSGFMT = /sw/bin/msgfmt
GNT_CFLAGS = 
GNT_LIBS = 
GNT_LT_VERSION_INFO = 8:0:8
GNT_MAJOR_VERSION = 2
GNT_MICRO_VERSION = 0
GNT_MINOR_VERSION = 8
GNT_VERSION = gnt_display_version
GNUTLS_CFLAGS = -I/opt/local/include/
GNUTLS_LIBS = -L/opt/local/lib/ -lgnutls -lgcrypt
GREP = /usr/bin/grep
GSTINTERFACES_CFLAGS = 
GSTINTERFACES_LIBS = 
GSTREAMER_CFLAGS = 
GSTREAMER_LIBS = 
GTKSPELL_CFLAGS = 
GTKSPELL_LIBS = 
GTK_CFLAGS = 
GTK_LIBS = 
HAVE_CHECK_FALSE = 
HAVE_CHECK_TRUE = #
HAVE_DOXYGEN_FALSE = 
HAVE_DOXYGEN_TRUE = #
HAVE_XSLTPROC_FALSE = #
HAVE_XSLTPROC_TRUE = 
IDN_CFLAGS = -I/sw/include  
IDN_LIBS = -L/sw/lib -lidn
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_I18N_FALSE = #
INSTALL_I18N_TRUE = 
INSTALL_PIXMAPS_FALSE = #
INSTALL_PIXMAPS_TRUE = 
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_SSL_CERTIFICATES_FALSE = #
INSTALL_SSL_CERTIFICATES_TRUE = 
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = -lintl 
INTLTOOL_CAVES_RULE = %.caves:     %.caves.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_DESKTOP_RULE = %.desktop:   %.desktop.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_DIRECTORY_RULE = %.directory: %.directory.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_EXTRACT = /sw/bin/intltool-extract
INTLTOOL_KBD_RULE = %.kbd:       %.kbd.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -m -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_KEYS_RULE = %.keys:      %.keys.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -k -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_MERGE = /sw/bin/intltool-merge
INTLTOOL_OAF_RULE = %.oaf:       %.oaf.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -o -p $(top_srcdir)/po $< $@
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_POLICY_RULE = %.policy:    %.policy.in    $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_PONG_RULE = %.pong:      %.pong.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_PROP_RULE = %.prop:      %.prop.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SCHEMAS_RULE = %.schemas:   %.schemas.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -s -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SERVER_RULE = %.server:    %.server.in    $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -o -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SERVICE_RULE = %.service: %.service.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SHEET_RULE = %.sheet:     %.sheet.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SOUNDLIST_RULE = %.soundlist: %.soundlist.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_THEME_RULE = %.theme:     %.theme.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_UI_RULE = %.ui:        %.ui.in        $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_UPDATE = /sw/bin/intltool-update
INTLTOOL_XAM_RULE = %.xam:       %.xml.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_XML_NOMERGE_RULE = %.xml:       %.xml.in       $(INTLTOOL_MERGE) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u /tmp $< $@
INTLTOOL_XML_RULE = %.xml:       %.xml.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
KRB4_CFLAGS = 
KRB4_LDFLAGS = 
KRB4_LIBS = 
LD = /usr/libexec/gcc/i686-apple-darwin10/4.2.1/ld
LDADD = 
LDFLAGS =  -L/sw/lib
LIBOBJS = 
LIBPERL_A = 
LIBS = -lresolv  -framework IOKit -framework CoreFoundation
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBXML_CFLAGS = -I/sw/include/libxml2 -I/sw/include
LIBXML_LIBS = -L/sw/lib -lxml2
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/deanchen/chimein/pidgin-2.7.3/missing --run makeinfo
MEANWHILE_CFLAGS = 
MEANWHILE_LIBS = 
MKINSTALLDIRS = ./mkinstalldirs
MONO_CFLAGS = 
MONO_LIBS = 
MSGFMT = /sw/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /sw/bin/msgmerge
NETWORKMANAGER_CFLAGS = 
NETWORKMANAGER_LIBS = 
NM = /usr/bin/nm
NMEDIT = nmedit
NSS_CFLAGS =  
NSS_LIBS =  
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = pidgin
PACKAGE_BUGREPORT = devel@pidgin.im
PACKAGE_NAME = pidgin
PACKAGE_STRING = pidgin 2.7.3
PACKAGE_TARNAME = pidgin
PACKAGE_URL = 
PACKAGE_VERSION = 2.7.3
PANGO_CFLAGS = 
PANGO_LIBS = 
PATH_SEPARATOR = :
PERL = 
PERL_CFLAGS = 
PERL_LIBS = 
PKG_CONFIG = /sw/bin/pkg-config
PLUGINS_DEFINE = #define PURPLE_PLUGINS 1
PLUGINS_FALSE = #
PLUGINS_TRUE = 
POFILES =  af.po am.po ar.po az.po be@latin.po bg.po bn.po bn_IN.po bs.po ca.po ca@valencia.po cs.po da.po de.po dz.po el.po en_AU.po en_CA.po en_GB.po eo.po es.po et.po eu.po fa.po fi.po fr.po ga.po gl.po gu.po he.po hi.po hu.po hy.po id.po it.po ja.po ka.po km.po kn.po ko.po ku.po lo.po lt.po mk.po mn.po mr.po ms_MY.po my_MM.po nb.po ne.po nl.po nn.po oc.po or.po pa.po pl.po pt_BR.po pt.po ps.po ro.po ru.po si.po sk.po sl.po sq.po sr.po sr@latin.po sv.po sw.po ta.po te.po th.po tr.po uk.po ur.po vi.po xh.po zh_CN.po zh_HK.po zh_TW.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PURPLE_AVAILABLE_FALSE = #
PURPLE_AVAILABLE_TRUE = 
PURPLE_LT_VERSION_INFO = 7:3:7
PURPLE_MAJOR_VERSION = 2
PURPLE_MICRO_VERSION = 3
PURPLE_MINOR_VERSION = 7
PURPLE_VERSION = purple_display_version
PYTHON = 
PY_CFLAGS = 
PY_LIBS = 
RANLIB = ranlib
SASL_LIBS = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SILC_CFLAGS = -I/sw/include/silc  
SILC_LIBS = -L/sw/lib -lsilcclient -lsilc -ldl -lpthread
SM_LIBS = 
SQLITE3_CFLAGS = 
SQLITE3_LIBS = 
SSL_CERTIFICATES_DIR = 
STARTUP_NOTIFICATION_CFLAGS = 
STARTUP_NOTIFICATION_LIBS = 
STATIC_BONJOUR_FALSE = 
STATIC_BONJOUR_TRUE = #
STATIC_GG_FALSE = 
STATIC_GG_TRUE = #
STATIC_IRC_FALSE = 
STATIC_IRC_TRUE = #
STATIC_JABBER_FALSE = 
STATIC_JABBER_TRUE = #
STATIC_LINK_LIBS = 
STATIC_MSN_FALSE = 
STATIC_MSN_TRUE = #
STATIC_MXIT_FALSE = 
STATIC_MXIT_TRUE = #
STATIC_MYSPACE_FALSE = 
STATIC_MYSPACE_TRUE = #
STATIC_NOVELL_FALSE = 
STATIC_NOVELL_TRUE = #
STATIC_OSCAR_FALSE = 
STATIC_OSCAR_TRUE = #
STATIC_PRPLS = 
STATIC_QQ_FALSE = 
STATIC_QQ_TRUE = #
STATIC_SAMETIME_FALSE = 
STATIC_SAMETIME_TRUE = #
STATIC_SILC_FALSE = 
STATIC_SILC_TRUE = #
STATIC_SIMPLE_FALSE = 
STATIC_SIMPLE_TRUE = #
STATIC_YAHOO_FALSE = 
STATIC_YAHOO_TRUE = #
STATIC_ZEPHYR_FALSE = 
STATIC_ZEPHYR_TRUE = #
STRIP = strip
TCL_CFLAGS = 
TCL_LIBS = 
TK_LIBS = 
USE_CYRUS_SASL_FALSE = 
USE_CYRUS_SASL_TRUE = #
USE_GCONFTOOL_FALSE = #
USE_GCONFTOOL_TRUE = 
USE_GNUTLS_FALSE = #
USE_GNUTLS_TRUE = 
USE_INTERNAL_LIBGADU_FALSE = #
USE_INTERNAL_LIBGADU_TRUE = 
USE_MONO_FALSE = 
USE_MONO_TRUE = #
USE_NLS = yes
USE_NSS_FALSE = 
USE_NSS_TRUE = #
USE_PERL_FALSE = 
USE_PERL_TRUE = #
USE_TCL_FALSE = 
USE_TCL_TRUE = #
USE_TK_FALSE = 
USE_TK_TRUE = #
USE_VV_FALSE = 
USE_VV_TRUE = #
VERSION = 2.7.3
X11_CFLAGS = 
X11_LIBS = 
XGETTEXT = /sw/bin/xgettext
XMKMF = 
XSLTPROC = 
XSS_LIBS = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS =  -L/usr/X11/lib -R/usr/X11/lib
X_PRE_LIBS =  -lSM -lICE
ZEPHYR_CFLAGS = 
ZEPHYR_LDFLAGS = 
ZEPHYR_LIBS = 
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin10.4.0
build_alias = 
build_cpu = i386
build_os = darwin10.4.0
build_vendor = apple
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
enable_dbus = no
enable_devhelp = yes
enable_dot = yes
enable_doxygen = no
exec_prefix = ${prefix}
host = i386-apple-darwin10.4.0
host_alias = 
host_cpu = i386
host_os = darwin10.4.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /Users/deanchen/chimein/pidgin-2.7.3/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = /bin/echo
mandir = ${datarootdir}/man
mkdir_p = $(mkinstalldirs)
oldincludedir = /usr/include
pdfdir = ${docdir}
perlpath = 
pidginpath = /sw/bin/pidgin
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sedpath = /usr/bin/sed
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
EXTRA_DIST = \
	Makefile.mingw \
	win32/posix.uname.c \
	win32/utsname.h

pkgdir = $(libdir)/purple-$(PURPLE_MAJOR_VERSION)
JABBERSOURCES = adhoccommands.c adhoccommands.h auth.c auth.h \
	auth_digest_md5.c auth_plain.c auth_scram.c auth_scram.h \
	buddy.c buddy.h bosh.c bosh.h caps.c caps.h chat.c chat.h \
	data.c data.h disco.c disco.h google.c google.h ibb.c ibb.h \
	iq.c iq.h jabber.c jabber.h jingle/jingle.c jingle/jingle.h \
	jingle/content.c jingle/content.h jingle/iceudp.c \
	jingle/iceudp.h jingle/rawudp.c jingle/rawudp.h jingle/rtp.c \
	jingle/rtp.h jingle/session.c jingle/session.h \
	jingle/transport.c jingle/transport.h jutil.c jutil.h \
	message.c message.h namespaces.h oob.c oob.h parser.c parser.h \
	pep.c pep.h ping.c ping.h presence.c presence.h roster.c \
	roster.h si.c si.h useravatar.c useravatar.h usermood.c \
	usermood.h usernick.c usernick.h usertune.c usertune.h xdata.c \
	xdata.h $(am__append_1)
AM_CFLAGS = $(st)
libxmpp_la_LDFLAGS = -module -avoid-version
st = 
#st = -DPURPLE_STATIC_PRPL
#noinst_LTLIBRARIES = libjabber.la
libjabber_la_SOURCES = $(JABBERSOURCES)
#libjabber_la_SOURCES = $(JABBERSOURCES) libxmpp.c
#libjabber_la_CFLAGS = $(AM_CFLAGS)
pkg_LTLIBRARIES = libjabber.la libxmpp.la
libjabber_la_LIBADD = $(GLIB_LIBS) $(SASL_LIBS) $(LIBXML_LIBS) $(IDN_LIBS)
libxmpp_la_SOURCES = libxmpp.c
libxmpp_la_LIBADD = libjabber.la
AM_CPPFLAGS = \
	-I$(top_srcdir)/libpurple \
	-I$(top_builddir)/libpurple \
	$(DEBUG_CFLAGS) \
	$(GLIB_CFLAGS) \
	$(IDN_CFLAGS) \
	$(LIBXML_CFLAGS)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  libpurple/protocols/jabber/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  libpurple/protocols/jabber/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-pkgLTLIBRARIES: $(pkg_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pkgdir)" || $(mkdir_p) "$(DESTDIR)$(pkgdir)"
	@list='$(pkg_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(pkgLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(pkgdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(pkgLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(pkgdir)/$$f"; \
	  else :; fi; \
	done

uninstall-pkgLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(pkg_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(pkgdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(pkgdir)/$$p"; \
	done

clean-pkgLTLIBRARIES:
	-test -z "$(pkg_LTLIBRARIES)" || rm -f $(pkg_LTLIBRARIES)
	@list='$(pkg_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libjabber.la: $(libjabber_la_OBJECTS) $(libjabber_la_DEPENDENCIES) 
	$(LINK) $(am_libjabber_la_rpath) $(libjabber_la_LDFLAGS) $(libjabber_la_OBJECTS) $(libjabber_la_LIBADD) $(LIBS)
libxmpp.la: $(libxmpp_la_OBJECTS) $(libxmpp_la_DEPENDENCIES) 
	$(LINK) $(am_libxmpp_la_rpath) $(libxmpp_la_LDFLAGS) $(libxmpp_la_OBJECTS) $(libxmpp_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libjabber_la-adhoccommands.Plo
include ./$(DEPDIR)/libjabber_la-auth.Plo
include ./$(DEPDIR)/libjabber_la-auth_cyrus.Plo
include ./$(DEPDIR)/libjabber_la-auth_digest_md5.Plo
include ./$(DEPDIR)/libjabber_la-auth_plain.Plo
include ./$(DEPDIR)/libjabber_la-auth_scram.Plo
include ./$(DEPDIR)/libjabber_la-bosh.Plo
include ./$(DEPDIR)/libjabber_la-buddy.Plo
include ./$(DEPDIR)/libjabber_la-caps.Plo
include ./$(DEPDIR)/libjabber_la-chat.Plo
include ./$(DEPDIR)/libjabber_la-content.Plo
include ./$(DEPDIR)/libjabber_la-data.Plo
include ./$(DEPDIR)/libjabber_la-disco.Plo
include ./$(DEPDIR)/libjabber_la-google.Plo
include ./$(DEPDIR)/libjabber_la-ibb.Plo
include ./$(DEPDIR)/libjabber_la-iceudp.Plo
include ./$(DEPDIR)/libjabber_la-iq.Plo
include ./$(DEPDIR)/libjabber_la-jabber.Plo
include ./$(DEPDIR)/libjabber_la-jingle.Plo
include ./$(DEPDIR)/libjabber_la-jutil.Plo
include ./$(DEPDIR)/libjabber_la-libxmpp.Plo
include ./$(DEPDIR)/libjabber_la-message.Plo
include ./$(DEPDIR)/libjabber_la-oob.Plo
include ./$(DEPDIR)/libjabber_la-parser.Plo
include ./$(DEPDIR)/libjabber_la-pep.Plo
include ./$(DEPDIR)/libjabber_la-ping.Plo
include ./$(DEPDIR)/libjabber_la-presence.Plo
include ./$(DEPDIR)/libjabber_la-rawudp.Plo
include ./$(DEPDIR)/libjabber_la-roster.Plo
include ./$(DEPDIR)/libjabber_la-rtp.Plo
include ./$(DEPDIR)/libjabber_la-session.Plo
include ./$(DEPDIR)/libjabber_la-si.Plo
include ./$(DEPDIR)/libjabber_la-transport.Plo
include ./$(DEPDIR)/libjabber_la-useravatar.Plo
include ./$(DEPDIR)/libjabber_la-usermood.Plo
include ./$(DEPDIR)/libjabber_la-usernick.Plo
include ./$(DEPDIR)/libjabber_la-usertune.Plo
include ./$(DEPDIR)/libjabber_la-xdata.Plo
include ./$(DEPDIR)/libxmpp.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libjabber_la-adhoccommands.lo: adhoccommands.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-adhoccommands.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-adhoccommands.Tpo" -c -o libjabber_la-adhoccommands.lo `test -f 'adhoccommands.c' || echo '$(srcdir)/'`adhoccommands.c; \
	then mv -f "$(DEPDIR)/libjabber_la-adhoccommands.Tpo" "$(DEPDIR)/libjabber_la-adhoccommands.Plo"; else rm -f "$(DEPDIR)/libjabber_la-adhoccommands.Tpo"; exit 1; fi
#	source='adhoccommands.c' object='libjabber_la-adhoccommands.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-adhoccommands.lo `test -f 'adhoccommands.c' || echo '$(srcdir)/'`adhoccommands.c

libjabber_la-auth.lo: auth.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-auth.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-auth.Tpo" -c -o libjabber_la-auth.lo `test -f 'auth.c' || echo '$(srcdir)/'`auth.c; \
	then mv -f "$(DEPDIR)/libjabber_la-auth.Tpo" "$(DEPDIR)/libjabber_la-auth.Plo"; else rm -f "$(DEPDIR)/libjabber_la-auth.Tpo"; exit 1; fi
#	source='auth.c' object='libjabber_la-auth.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-auth.lo `test -f 'auth.c' || echo '$(srcdir)/'`auth.c

libjabber_la-auth_digest_md5.lo: auth_digest_md5.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-auth_digest_md5.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-auth_digest_md5.Tpo" -c -o libjabber_la-auth_digest_md5.lo `test -f 'auth_digest_md5.c' || echo '$(srcdir)/'`auth_digest_md5.c; \
	then mv -f "$(DEPDIR)/libjabber_la-auth_digest_md5.Tpo" "$(DEPDIR)/libjabber_la-auth_digest_md5.Plo"; else rm -f "$(DEPDIR)/libjabber_la-auth_digest_md5.Tpo"; exit 1; fi
#	source='auth_digest_md5.c' object='libjabber_la-auth_digest_md5.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-auth_digest_md5.lo `test -f 'auth_digest_md5.c' || echo '$(srcdir)/'`auth_digest_md5.c

libjabber_la-auth_plain.lo: auth_plain.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-auth_plain.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-auth_plain.Tpo" -c -o libjabber_la-auth_plain.lo `test -f 'auth_plain.c' || echo '$(srcdir)/'`auth_plain.c; \
	then mv -f "$(DEPDIR)/libjabber_la-auth_plain.Tpo" "$(DEPDIR)/libjabber_la-auth_plain.Plo"; else rm -f "$(DEPDIR)/libjabber_la-auth_plain.Tpo"; exit 1; fi
#	source='auth_plain.c' object='libjabber_la-auth_plain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-auth_plain.lo `test -f 'auth_plain.c' || echo '$(srcdir)/'`auth_plain.c

libjabber_la-auth_scram.lo: auth_scram.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-auth_scram.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-auth_scram.Tpo" -c -o libjabber_la-auth_scram.lo `test -f 'auth_scram.c' || echo '$(srcdir)/'`auth_scram.c; \
	then mv -f "$(DEPDIR)/libjabber_la-auth_scram.Tpo" "$(DEPDIR)/libjabber_la-auth_scram.Plo"; else rm -f "$(DEPDIR)/libjabber_la-auth_scram.Tpo"; exit 1; fi
#	source='auth_scram.c' object='libjabber_la-auth_scram.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-auth_scram.lo `test -f 'auth_scram.c' || echo '$(srcdir)/'`auth_scram.c

libjabber_la-buddy.lo: buddy.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-buddy.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-buddy.Tpo" -c -o libjabber_la-buddy.lo `test -f 'buddy.c' || echo '$(srcdir)/'`buddy.c; \
	then mv -f "$(DEPDIR)/libjabber_la-buddy.Tpo" "$(DEPDIR)/libjabber_la-buddy.Plo"; else rm -f "$(DEPDIR)/libjabber_la-buddy.Tpo"; exit 1; fi
#	source='buddy.c' object='libjabber_la-buddy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-buddy.lo `test -f 'buddy.c' || echo '$(srcdir)/'`buddy.c

libjabber_la-bosh.lo: bosh.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-bosh.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-bosh.Tpo" -c -o libjabber_la-bosh.lo `test -f 'bosh.c' || echo '$(srcdir)/'`bosh.c; \
	then mv -f "$(DEPDIR)/libjabber_la-bosh.Tpo" "$(DEPDIR)/libjabber_la-bosh.Plo"; else rm -f "$(DEPDIR)/libjabber_la-bosh.Tpo"; exit 1; fi
#	source='bosh.c' object='libjabber_la-bosh.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-bosh.lo `test -f 'bosh.c' || echo '$(srcdir)/'`bosh.c

libjabber_la-caps.lo: caps.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-caps.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-caps.Tpo" -c -o libjabber_la-caps.lo `test -f 'caps.c' || echo '$(srcdir)/'`caps.c; \
	then mv -f "$(DEPDIR)/libjabber_la-caps.Tpo" "$(DEPDIR)/libjabber_la-caps.Plo"; else rm -f "$(DEPDIR)/libjabber_la-caps.Tpo"; exit 1; fi
#	source='caps.c' object='libjabber_la-caps.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-caps.lo `test -f 'caps.c' || echo '$(srcdir)/'`caps.c

libjabber_la-chat.lo: chat.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-chat.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-chat.Tpo" -c -o libjabber_la-chat.lo `test -f 'chat.c' || echo '$(srcdir)/'`chat.c; \
	then mv -f "$(DEPDIR)/libjabber_la-chat.Tpo" "$(DEPDIR)/libjabber_la-chat.Plo"; else rm -f "$(DEPDIR)/libjabber_la-chat.Tpo"; exit 1; fi
#	source='chat.c' object='libjabber_la-chat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-chat.lo `test -f 'chat.c' || echo '$(srcdir)/'`chat.c

libjabber_la-data.lo: data.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-data.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-data.Tpo" -c -o libjabber_la-data.lo `test -f 'data.c' || echo '$(srcdir)/'`data.c; \
	then mv -f "$(DEPDIR)/libjabber_la-data.Tpo" "$(DEPDIR)/libjabber_la-data.Plo"; else rm -f "$(DEPDIR)/libjabber_la-data.Tpo"; exit 1; fi
#	source='data.c' object='libjabber_la-data.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-data.lo `test -f 'data.c' || echo '$(srcdir)/'`data.c

libjabber_la-disco.lo: disco.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-disco.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-disco.Tpo" -c -o libjabber_la-disco.lo `test -f 'disco.c' || echo '$(srcdir)/'`disco.c; \
	then mv -f "$(DEPDIR)/libjabber_la-disco.Tpo" "$(DEPDIR)/libjabber_la-disco.Plo"; else rm -f "$(DEPDIR)/libjabber_la-disco.Tpo"; exit 1; fi
#	source='disco.c' object='libjabber_la-disco.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-disco.lo `test -f 'disco.c' || echo '$(srcdir)/'`disco.c

libjabber_la-google.lo: google.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-google.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-google.Tpo" -c -o libjabber_la-google.lo `test -f 'google.c' || echo '$(srcdir)/'`google.c; \
	then mv -f "$(DEPDIR)/libjabber_la-google.Tpo" "$(DEPDIR)/libjabber_la-google.Plo"; else rm -f "$(DEPDIR)/libjabber_la-google.Tpo"; exit 1; fi
#	source='google.c' object='libjabber_la-google.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-google.lo `test -f 'google.c' || echo '$(srcdir)/'`google.c

libjabber_la-ibb.lo: ibb.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-ibb.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-ibb.Tpo" -c -o libjabber_la-ibb.lo `test -f 'ibb.c' || echo '$(srcdir)/'`ibb.c; \
	then mv -f "$(DEPDIR)/libjabber_la-ibb.Tpo" "$(DEPDIR)/libjabber_la-ibb.Plo"; else rm -f "$(DEPDIR)/libjabber_la-ibb.Tpo"; exit 1; fi
#	source='ibb.c' object='libjabber_la-ibb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-ibb.lo `test -f 'ibb.c' || echo '$(srcdir)/'`ibb.c

libjabber_la-iq.lo: iq.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-iq.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-iq.Tpo" -c -o libjabber_la-iq.lo `test -f 'iq.c' || echo '$(srcdir)/'`iq.c; \
	then mv -f "$(DEPDIR)/libjabber_la-iq.Tpo" "$(DEPDIR)/libjabber_la-iq.Plo"; else rm -f "$(DEPDIR)/libjabber_la-iq.Tpo"; exit 1; fi
#	source='iq.c' object='libjabber_la-iq.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-iq.lo `test -f 'iq.c' || echo '$(srcdir)/'`iq.c

libjabber_la-jabber.lo: jabber.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-jabber.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-jabber.Tpo" -c -o libjabber_la-jabber.lo `test -f 'jabber.c' || echo '$(srcdir)/'`jabber.c; \
	then mv -f "$(DEPDIR)/libjabber_la-jabber.Tpo" "$(DEPDIR)/libjabber_la-jabber.Plo"; else rm -f "$(DEPDIR)/libjabber_la-jabber.Tpo"; exit 1; fi
#	source='jabber.c' object='libjabber_la-jabber.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-jabber.lo `test -f 'jabber.c' || echo '$(srcdir)/'`jabber.c

libjabber_la-jingle.lo: jingle/jingle.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-jingle.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-jingle.Tpo" -c -o libjabber_la-jingle.lo `test -f 'jingle/jingle.c' || echo '$(srcdir)/'`jingle/jingle.c; \
	then mv -f "$(DEPDIR)/libjabber_la-jingle.Tpo" "$(DEPDIR)/libjabber_la-jingle.Plo"; else rm -f "$(DEPDIR)/libjabber_la-jingle.Tpo"; exit 1; fi
#	source='jingle/jingle.c' object='libjabber_la-jingle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-jingle.lo `test -f 'jingle/jingle.c' || echo '$(srcdir)/'`jingle/jingle.c

libjabber_la-content.lo: jingle/content.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-content.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-content.Tpo" -c -o libjabber_la-content.lo `test -f 'jingle/content.c' || echo '$(srcdir)/'`jingle/content.c; \
	then mv -f "$(DEPDIR)/libjabber_la-content.Tpo" "$(DEPDIR)/libjabber_la-content.Plo"; else rm -f "$(DEPDIR)/libjabber_la-content.Tpo"; exit 1; fi
#	source='jingle/content.c' object='libjabber_la-content.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-content.lo `test -f 'jingle/content.c' || echo '$(srcdir)/'`jingle/content.c

libjabber_la-iceudp.lo: jingle/iceudp.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-iceudp.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-iceudp.Tpo" -c -o libjabber_la-iceudp.lo `test -f 'jingle/iceudp.c' || echo '$(srcdir)/'`jingle/iceudp.c; \
	then mv -f "$(DEPDIR)/libjabber_la-iceudp.Tpo" "$(DEPDIR)/libjabber_la-iceudp.Plo"; else rm -f "$(DEPDIR)/libjabber_la-iceudp.Tpo"; exit 1; fi
#	source='jingle/iceudp.c' object='libjabber_la-iceudp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-iceudp.lo `test -f 'jingle/iceudp.c' || echo '$(srcdir)/'`jingle/iceudp.c

libjabber_la-rawudp.lo: jingle/rawudp.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-rawudp.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-rawudp.Tpo" -c -o libjabber_la-rawudp.lo `test -f 'jingle/rawudp.c' || echo '$(srcdir)/'`jingle/rawudp.c; \
	then mv -f "$(DEPDIR)/libjabber_la-rawudp.Tpo" "$(DEPDIR)/libjabber_la-rawudp.Plo"; else rm -f "$(DEPDIR)/libjabber_la-rawudp.Tpo"; exit 1; fi
#	source='jingle/rawudp.c' object='libjabber_la-rawudp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-rawudp.lo `test -f 'jingle/rawudp.c' || echo '$(srcdir)/'`jingle/rawudp.c

libjabber_la-rtp.lo: jingle/rtp.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-rtp.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-rtp.Tpo" -c -o libjabber_la-rtp.lo `test -f 'jingle/rtp.c' || echo '$(srcdir)/'`jingle/rtp.c; \
	then mv -f "$(DEPDIR)/libjabber_la-rtp.Tpo" "$(DEPDIR)/libjabber_la-rtp.Plo"; else rm -f "$(DEPDIR)/libjabber_la-rtp.Tpo"; exit 1; fi
#	source='jingle/rtp.c' object='libjabber_la-rtp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-rtp.lo `test -f 'jingle/rtp.c' || echo '$(srcdir)/'`jingle/rtp.c

libjabber_la-session.lo: jingle/session.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-session.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-session.Tpo" -c -o libjabber_la-session.lo `test -f 'jingle/session.c' || echo '$(srcdir)/'`jingle/session.c; \
	then mv -f "$(DEPDIR)/libjabber_la-session.Tpo" "$(DEPDIR)/libjabber_la-session.Plo"; else rm -f "$(DEPDIR)/libjabber_la-session.Tpo"; exit 1; fi
#	source='jingle/session.c' object='libjabber_la-session.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-session.lo `test -f 'jingle/session.c' || echo '$(srcdir)/'`jingle/session.c

libjabber_la-transport.lo: jingle/transport.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-transport.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-transport.Tpo" -c -o libjabber_la-transport.lo `test -f 'jingle/transport.c' || echo '$(srcdir)/'`jingle/transport.c; \
	then mv -f "$(DEPDIR)/libjabber_la-transport.Tpo" "$(DEPDIR)/libjabber_la-transport.Plo"; else rm -f "$(DEPDIR)/libjabber_la-transport.Tpo"; exit 1; fi
#	source='jingle/transport.c' object='libjabber_la-transport.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-transport.lo `test -f 'jingle/transport.c' || echo '$(srcdir)/'`jingle/transport.c

libjabber_la-jutil.lo: jutil.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-jutil.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-jutil.Tpo" -c -o libjabber_la-jutil.lo `test -f 'jutil.c' || echo '$(srcdir)/'`jutil.c; \
	then mv -f "$(DEPDIR)/libjabber_la-jutil.Tpo" "$(DEPDIR)/libjabber_la-jutil.Plo"; else rm -f "$(DEPDIR)/libjabber_la-jutil.Tpo"; exit 1; fi
#	source='jutil.c' object='libjabber_la-jutil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-jutil.lo `test -f 'jutil.c' || echo '$(srcdir)/'`jutil.c

libjabber_la-message.lo: message.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-message.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-message.Tpo" -c -o libjabber_la-message.lo `test -f 'message.c' || echo '$(srcdir)/'`message.c; \
	then mv -f "$(DEPDIR)/libjabber_la-message.Tpo" "$(DEPDIR)/libjabber_la-message.Plo"; else rm -f "$(DEPDIR)/libjabber_la-message.Tpo"; exit 1; fi
#	source='message.c' object='libjabber_la-message.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-message.lo `test -f 'message.c' || echo '$(srcdir)/'`message.c

libjabber_la-oob.lo: oob.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-oob.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-oob.Tpo" -c -o libjabber_la-oob.lo `test -f 'oob.c' || echo '$(srcdir)/'`oob.c; \
	then mv -f "$(DEPDIR)/libjabber_la-oob.Tpo" "$(DEPDIR)/libjabber_la-oob.Plo"; else rm -f "$(DEPDIR)/libjabber_la-oob.Tpo"; exit 1; fi
#	source='oob.c' object='libjabber_la-oob.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-oob.lo `test -f 'oob.c' || echo '$(srcdir)/'`oob.c

libjabber_la-parser.lo: parser.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-parser.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-parser.Tpo" -c -o libjabber_la-parser.lo `test -f 'parser.c' || echo '$(srcdir)/'`parser.c; \
	then mv -f "$(DEPDIR)/libjabber_la-parser.Tpo" "$(DEPDIR)/libjabber_la-parser.Plo"; else rm -f "$(DEPDIR)/libjabber_la-parser.Tpo"; exit 1; fi
#	source='parser.c' object='libjabber_la-parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-parser.lo `test -f 'parser.c' || echo '$(srcdir)/'`parser.c

libjabber_la-pep.lo: pep.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-pep.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-pep.Tpo" -c -o libjabber_la-pep.lo `test -f 'pep.c' || echo '$(srcdir)/'`pep.c; \
	then mv -f "$(DEPDIR)/libjabber_la-pep.Tpo" "$(DEPDIR)/libjabber_la-pep.Plo"; else rm -f "$(DEPDIR)/libjabber_la-pep.Tpo"; exit 1; fi
#	source='pep.c' object='libjabber_la-pep.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-pep.lo `test -f 'pep.c' || echo '$(srcdir)/'`pep.c

libjabber_la-ping.lo: ping.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-ping.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-ping.Tpo" -c -o libjabber_la-ping.lo `test -f 'ping.c' || echo '$(srcdir)/'`ping.c; \
	then mv -f "$(DEPDIR)/libjabber_la-ping.Tpo" "$(DEPDIR)/libjabber_la-ping.Plo"; else rm -f "$(DEPDIR)/libjabber_la-ping.Tpo"; exit 1; fi
#	source='ping.c' object='libjabber_la-ping.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-ping.lo `test -f 'ping.c' || echo '$(srcdir)/'`ping.c

libjabber_la-presence.lo: presence.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-presence.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-presence.Tpo" -c -o libjabber_la-presence.lo `test -f 'presence.c' || echo '$(srcdir)/'`presence.c; \
	then mv -f "$(DEPDIR)/libjabber_la-presence.Tpo" "$(DEPDIR)/libjabber_la-presence.Plo"; else rm -f "$(DEPDIR)/libjabber_la-presence.Tpo"; exit 1; fi
#	source='presence.c' object='libjabber_la-presence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-presence.lo `test -f 'presence.c' || echo '$(srcdir)/'`presence.c

libjabber_la-roster.lo: roster.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-roster.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-roster.Tpo" -c -o libjabber_la-roster.lo `test -f 'roster.c' || echo '$(srcdir)/'`roster.c; \
	then mv -f "$(DEPDIR)/libjabber_la-roster.Tpo" "$(DEPDIR)/libjabber_la-roster.Plo"; else rm -f "$(DEPDIR)/libjabber_la-roster.Tpo"; exit 1; fi
#	source='roster.c' object='libjabber_la-roster.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-roster.lo `test -f 'roster.c' || echo '$(srcdir)/'`roster.c

libjabber_la-si.lo: si.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-si.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-si.Tpo" -c -o libjabber_la-si.lo `test -f 'si.c' || echo '$(srcdir)/'`si.c; \
	then mv -f "$(DEPDIR)/libjabber_la-si.Tpo" "$(DEPDIR)/libjabber_la-si.Plo"; else rm -f "$(DEPDIR)/libjabber_la-si.Tpo"; exit 1; fi
#	source='si.c' object='libjabber_la-si.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-si.lo `test -f 'si.c' || echo '$(srcdir)/'`si.c

libjabber_la-useravatar.lo: useravatar.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-useravatar.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-useravatar.Tpo" -c -o libjabber_la-useravatar.lo `test -f 'useravatar.c' || echo '$(srcdir)/'`useravatar.c; \
	then mv -f "$(DEPDIR)/libjabber_la-useravatar.Tpo" "$(DEPDIR)/libjabber_la-useravatar.Plo"; else rm -f "$(DEPDIR)/libjabber_la-useravatar.Tpo"; exit 1; fi
#	source='useravatar.c' object='libjabber_la-useravatar.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-useravatar.lo `test -f 'useravatar.c' || echo '$(srcdir)/'`useravatar.c

libjabber_la-usermood.lo: usermood.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-usermood.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-usermood.Tpo" -c -o libjabber_la-usermood.lo `test -f 'usermood.c' || echo '$(srcdir)/'`usermood.c; \
	then mv -f "$(DEPDIR)/libjabber_la-usermood.Tpo" "$(DEPDIR)/libjabber_la-usermood.Plo"; else rm -f "$(DEPDIR)/libjabber_la-usermood.Tpo"; exit 1; fi
#	source='usermood.c' object='libjabber_la-usermood.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-usermood.lo `test -f 'usermood.c' || echo '$(srcdir)/'`usermood.c

libjabber_la-usernick.lo: usernick.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-usernick.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-usernick.Tpo" -c -o libjabber_la-usernick.lo `test -f 'usernick.c' || echo '$(srcdir)/'`usernick.c; \
	then mv -f "$(DEPDIR)/libjabber_la-usernick.Tpo" "$(DEPDIR)/libjabber_la-usernick.Plo"; else rm -f "$(DEPDIR)/libjabber_la-usernick.Tpo"; exit 1; fi
#	source='usernick.c' object='libjabber_la-usernick.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-usernick.lo `test -f 'usernick.c' || echo '$(srcdir)/'`usernick.c

libjabber_la-usertune.lo: usertune.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-usertune.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-usertune.Tpo" -c -o libjabber_la-usertune.lo `test -f 'usertune.c' || echo '$(srcdir)/'`usertune.c; \
	then mv -f "$(DEPDIR)/libjabber_la-usertune.Tpo" "$(DEPDIR)/libjabber_la-usertune.Plo"; else rm -f "$(DEPDIR)/libjabber_la-usertune.Tpo"; exit 1; fi
#	source='usertune.c' object='libjabber_la-usertune.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-usertune.lo `test -f 'usertune.c' || echo '$(srcdir)/'`usertune.c

libjabber_la-xdata.lo: xdata.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-xdata.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-xdata.Tpo" -c -o libjabber_la-xdata.lo `test -f 'xdata.c' || echo '$(srcdir)/'`xdata.c; \
	then mv -f "$(DEPDIR)/libjabber_la-xdata.Tpo" "$(DEPDIR)/libjabber_la-xdata.Plo"; else rm -f "$(DEPDIR)/libjabber_la-xdata.Tpo"; exit 1; fi
#	source='xdata.c' object='libjabber_la-xdata.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-xdata.lo `test -f 'xdata.c' || echo '$(srcdir)/'`xdata.c

libjabber_la-auth_cyrus.lo: auth_cyrus.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-auth_cyrus.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-auth_cyrus.Tpo" -c -o libjabber_la-auth_cyrus.lo `test -f 'auth_cyrus.c' || echo '$(srcdir)/'`auth_cyrus.c; \
	then mv -f "$(DEPDIR)/libjabber_la-auth_cyrus.Tpo" "$(DEPDIR)/libjabber_la-auth_cyrus.Plo"; else rm -f "$(DEPDIR)/libjabber_la-auth_cyrus.Tpo"; exit 1; fi
#	source='auth_cyrus.c' object='libjabber_la-auth_cyrus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-auth_cyrus.lo `test -f 'auth_cyrus.c' || echo '$(srcdir)/'`auth_cyrus.c

libjabber_la-libxmpp.lo: libxmpp.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-libxmpp.lo -MD -MP -MF "$(DEPDIR)/libjabber_la-libxmpp.Tpo" -c -o libjabber_la-libxmpp.lo `test -f 'libxmpp.c' || echo '$(srcdir)/'`libxmpp.c; \
	then mv -f "$(DEPDIR)/libjabber_la-libxmpp.Tpo" "$(DEPDIR)/libjabber_la-libxmpp.Plo"; else rm -f "$(DEPDIR)/libjabber_la-libxmpp.Tpo"; exit 1; fi
#	source='libxmpp.c' object='libjabber_la-libxmpp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-libxmpp.lo `test -f 'libxmpp.c' || echo '$(srcdir)/'`libxmpp.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/win32
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(pkgdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-pkgLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-pkgLTLIBRARIES

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-pkgLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES clean-pkgLTLIBRARIES \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-pkgLTLIBRARIES \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am uninstall-pkgLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
